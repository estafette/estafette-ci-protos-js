/**
 * @fileoverview
 * @enhanceable
 * @suppress {messageConventions} JS Compiler reports an error if a variable or
 *     field starts with 'MSG_' and isn't a translatable message.
 * @public
 */
// GENERATED CODE -- DO NOT EDIT!

goog.provide('proto.manifest.v1.EstafetteManifest');

goog.require('jspb.BinaryReader');
goog.require('jspb.BinaryWriter');
goog.require('jspb.Map');
goog.require('jspb.Message');
goog.require('proto.manifest.v1.EstafetteBuilder');
goog.require('proto.manifest.v1.EstafetteRelease');
goog.require('proto.manifest.v1.EstafetteStage');
goog.require('proto.manifest.v1.EstafetteTrigger');
goog.require('proto.manifest.v1.EstafetteVersion');


/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.manifest.v1.EstafetteManifest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.manifest.v1.EstafetteManifest.repeatedFields_, null);
};
goog.inherits(proto.manifest.v1.EstafetteManifest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.manifest.v1.EstafetteManifest.displayName = 'proto.manifest.v1.EstafetteManifest';
}
/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.manifest.v1.EstafetteManifest.repeatedFields_ = [5,6,7];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.manifest.v1.EstafetteManifest.prototype.toObject = function(opt_includeInstance) {
  return proto.manifest.v1.EstafetteManifest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.manifest.v1.EstafetteManifest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.manifest.v1.EstafetteManifest.toObject = function(includeInstance, msg) {
  var f, obj = {
    builder: (f = msg.getBuilder()) && proto.manifest.v1.EstafetteBuilder.toObject(includeInstance, f),
    labelsMap: (f = msg.getLabelsMap()) ? f.toObject(includeInstance, undefined) : [],
    version: (f = msg.getVersion()) && proto.manifest.v1.EstafetteVersion.toObject(includeInstance, f),
    globalEnvVarsMap: (f = msg.getGlobalEnvVarsMap()) ? f.toObject(includeInstance, undefined) : [],
    triggersList: jspb.Message.toObjectList(msg.getTriggersList(),
    proto.manifest.v1.EstafetteTrigger.toObject, includeInstance),
    stagesList: jspb.Message.toObjectList(msg.getStagesList(),
    proto.manifest.v1.EstafetteStage.toObject, includeInstance),
    releasesList: jspb.Message.toObjectList(msg.getReleasesList(),
    proto.manifest.v1.EstafetteRelease.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.manifest.v1.EstafetteManifest}
 */
proto.manifest.v1.EstafetteManifest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.manifest.v1.EstafetteManifest;
  return proto.manifest.v1.EstafetteManifest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.manifest.v1.EstafetteManifest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.manifest.v1.EstafetteManifest}
 */
proto.manifest.v1.EstafetteManifest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.manifest.v1.EstafetteBuilder;
      reader.readMessage(value,proto.manifest.v1.EstafetteBuilder.deserializeBinaryFromReader);
      msg.setBuilder(value);
      break;
    case 2:
      var value = msg.getLabelsMap();
      reader.readMessage(value, function(message, reader) {
        jspb.Map.deserializeBinary(message, reader, jspb.BinaryReader.prototype.readString, jspb.BinaryReader.prototype.readString, null, "");
         });
      break;
    case 3:
      var value = new proto.manifest.v1.EstafetteVersion;
      reader.readMessage(value,proto.manifest.v1.EstafetteVersion.deserializeBinaryFromReader);
      msg.setVersion(value);
      break;
    case 4:
      var value = msg.getGlobalEnvVarsMap();
      reader.readMessage(value, function(message, reader) {
        jspb.Map.deserializeBinary(message, reader, jspb.BinaryReader.prototype.readString, jspb.BinaryReader.prototype.readString, null, "");
         });
      break;
    case 5:
      var value = new proto.manifest.v1.EstafetteTrigger;
      reader.readMessage(value,proto.manifest.v1.EstafetteTrigger.deserializeBinaryFromReader);
      msg.addTriggers(value);
      break;
    case 6:
      var value = new proto.manifest.v1.EstafetteStage;
      reader.readMessage(value,proto.manifest.v1.EstafetteStage.deserializeBinaryFromReader);
      msg.addStages(value);
      break;
    case 7:
      var value = new proto.manifest.v1.EstafetteRelease;
      reader.readMessage(value,proto.manifest.v1.EstafetteRelease.deserializeBinaryFromReader);
      msg.addReleases(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.manifest.v1.EstafetteManifest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.manifest.v1.EstafetteManifest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.manifest.v1.EstafetteManifest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.manifest.v1.EstafetteManifest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getBuilder();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      proto.manifest.v1.EstafetteBuilder.serializeBinaryToWriter
    );
  }
  f = message.getLabelsMap(true);
  if (f && f.getLength() > 0) {
    f.serializeBinary(2, writer, jspb.BinaryWriter.prototype.writeString, jspb.BinaryWriter.prototype.writeString);
  }
  f = message.getVersion();
  if (f != null) {
    writer.writeMessage(
      3,
      f,
      proto.manifest.v1.EstafetteVersion.serializeBinaryToWriter
    );
  }
  f = message.getGlobalEnvVarsMap(true);
  if (f && f.getLength() > 0) {
    f.serializeBinary(4, writer, jspb.BinaryWriter.prototype.writeString, jspb.BinaryWriter.prototype.writeString);
  }
  f = message.getTriggersList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      5,
      f,
      proto.manifest.v1.EstafetteTrigger.serializeBinaryToWriter
    );
  }
  f = message.getStagesList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      6,
      f,
      proto.manifest.v1.EstafetteStage.serializeBinaryToWriter
    );
  }
  f = message.getReleasesList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      7,
      f,
      proto.manifest.v1.EstafetteRelease.serializeBinaryToWriter
    );
  }
};


/**
 * optional EstafetteBuilder builder = 1;
 * @return {?proto.manifest.v1.EstafetteBuilder}
 */
proto.manifest.v1.EstafetteManifest.prototype.getBuilder = function() {
  return /** @type{?proto.manifest.v1.EstafetteBuilder} */ (
    jspb.Message.getWrapperField(this, proto.manifest.v1.EstafetteBuilder, 1));
};


/** @param {?proto.manifest.v1.EstafetteBuilder|undefined} value */
proto.manifest.v1.EstafetteManifest.prototype.setBuilder = function(value) {
  jspb.Message.setWrapperField(this, 1, value);
};


proto.manifest.v1.EstafetteManifest.prototype.clearBuilder = function() {
  this.setBuilder(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.manifest.v1.EstafetteManifest.prototype.hasBuilder = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * map<string, string> labels = 2;
 * @param {boolean=} opt_noLazyCreate Do not create the map if
 * empty, instead returning `undefined`
 * @return {!jspb.Map<string,string>}
 */
proto.manifest.v1.EstafetteManifest.prototype.getLabelsMap = function(opt_noLazyCreate) {
  return /** @type {!jspb.Map<string,string>} */ (
      jspb.Message.getMapField(this, 2, opt_noLazyCreate,
      null));
};


proto.manifest.v1.EstafetteManifest.prototype.clearLabelsMap = function() {
  this.getLabelsMap().clear();
};


/**
 * optional EstafetteVersion version = 3;
 * @return {?proto.manifest.v1.EstafetteVersion}
 */
proto.manifest.v1.EstafetteManifest.prototype.getVersion = function() {
  return /** @type{?proto.manifest.v1.EstafetteVersion} */ (
    jspb.Message.getWrapperField(this, proto.manifest.v1.EstafetteVersion, 3));
};


/** @param {?proto.manifest.v1.EstafetteVersion|undefined} value */
proto.manifest.v1.EstafetteManifest.prototype.setVersion = function(value) {
  jspb.Message.setWrapperField(this, 3, value);
};


proto.manifest.v1.EstafetteManifest.prototype.clearVersion = function() {
  this.setVersion(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.manifest.v1.EstafetteManifest.prototype.hasVersion = function() {
  return jspb.Message.getField(this, 3) != null;
};


/**
 * map<string, string> global_env_vars = 4;
 * @param {boolean=} opt_noLazyCreate Do not create the map if
 * empty, instead returning `undefined`
 * @return {!jspb.Map<string,string>}
 */
proto.manifest.v1.EstafetteManifest.prototype.getGlobalEnvVarsMap = function(opt_noLazyCreate) {
  return /** @type {!jspb.Map<string,string>} */ (
      jspb.Message.getMapField(this, 4, opt_noLazyCreate,
      null));
};


proto.manifest.v1.EstafetteManifest.prototype.clearGlobalEnvVarsMap = function() {
  this.getGlobalEnvVarsMap().clear();
};


/**
 * repeated EstafetteTrigger triggers = 5;
 * @return {!Array<!proto.manifest.v1.EstafetteTrigger>}
 */
proto.manifest.v1.EstafetteManifest.prototype.getTriggersList = function() {
  return /** @type{!Array<!proto.manifest.v1.EstafetteTrigger>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.manifest.v1.EstafetteTrigger, 5));
};


/** @param {!Array<!proto.manifest.v1.EstafetteTrigger>} value */
proto.manifest.v1.EstafetteManifest.prototype.setTriggersList = function(value) {
  jspb.Message.setRepeatedWrapperField(this, 5, value);
};


/**
 * @param {!proto.manifest.v1.EstafetteTrigger=} opt_value
 * @param {number=} opt_index
 * @return {!proto.manifest.v1.EstafetteTrigger}
 */
proto.manifest.v1.EstafetteManifest.prototype.addTriggers = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 5, opt_value, proto.manifest.v1.EstafetteTrigger, opt_index);
};


proto.manifest.v1.EstafetteManifest.prototype.clearTriggersList = function() {
  this.setTriggersList([]);
};


/**
 * repeated EstafetteStage stages = 6;
 * @return {!Array<!proto.manifest.v1.EstafetteStage>}
 */
proto.manifest.v1.EstafetteManifest.prototype.getStagesList = function() {
  return /** @type{!Array<!proto.manifest.v1.EstafetteStage>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.manifest.v1.EstafetteStage, 6));
};


/** @param {!Array<!proto.manifest.v1.EstafetteStage>} value */
proto.manifest.v1.EstafetteManifest.prototype.setStagesList = function(value) {
  jspb.Message.setRepeatedWrapperField(this, 6, value);
};


/**
 * @param {!proto.manifest.v1.EstafetteStage=} opt_value
 * @param {number=} opt_index
 * @return {!proto.manifest.v1.EstafetteStage}
 */
proto.manifest.v1.EstafetteManifest.prototype.addStages = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 6, opt_value, proto.manifest.v1.EstafetteStage, opt_index);
};


proto.manifest.v1.EstafetteManifest.prototype.clearStagesList = function() {
  this.setStagesList([]);
};


/**
 * repeated EstafetteRelease releases = 7;
 * @return {!Array<!proto.manifest.v1.EstafetteRelease>}
 */
proto.manifest.v1.EstafetteManifest.prototype.getReleasesList = function() {
  return /** @type{!Array<!proto.manifest.v1.EstafetteRelease>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.manifest.v1.EstafetteRelease, 7));
};


/** @param {!Array<!proto.manifest.v1.EstafetteRelease>} value */
proto.manifest.v1.EstafetteManifest.prototype.setReleasesList = function(value) {
  jspb.Message.setRepeatedWrapperField(this, 7, value);
};


/**
 * @param {!proto.manifest.v1.EstafetteRelease=} opt_value
 * @param {number=} opt_index
 * @return {!proto.manifest.v1.EstafetteRelease}
 */
proto.manifest.v1.EstafetteManifest.prototype.addReleases = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 7, opt_value, proto.manifest.v1.EstafetteRelease, opt_index);
};


proto.manifest.v1.EstafetteManifest.prototype.clearReleasesList = function() {
  this.setReleasesList([]);
};


