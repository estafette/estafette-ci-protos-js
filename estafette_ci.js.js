/**
 * @fileoverview
 * @enhanceable
 * @suppress {messageConventions} JS Compiler reports an error if a variable or
 *     field starts with 'MSG_' and isn't a translatable message.
 * @public
 */
// GENERATED CODE -- DO NOT EDIT!


goog.provide('proto.estafette.ci.manifest.v1.EstafetteBuilder');
goog.provide('proto.estafette.ci.manifest.v1.EstafetteCronEvent');
goog.provide('proto.estafette.ci.manifest.v1.EstafetteCronTrigger');
goog.provide('proto.estafette.ci.manifest.v1.EstafetteCustomVersion');
goog.provide('proto.estafette.ci.manifest.v1.EstafetteDockerEvent');
goog.provide('proto.estafette.ci.manifest.v1.EstafetteDockerTrigger');
goog.provide('proto.estafette.ci.manifest.v1.EstafetteEvent');
goog.provide('proto.estafette.ci.manifest.v1.EstafetteGitEvent');
goog.provide('proto.estafette.ci.manifest.v1.EstafetteGitTrigger');
goog.provide('proto.estafette.ci.manifest.v1.EstafetteManifest');
goog.provide('proto.estafette.ci.manifest.v1.EstafetteManualEvent');
goog.provide('proto.estafette.ci.manifest.v1.EstafettePipelineEvent');
goog.provide('proto.estafette.ci.manifest.v1.EstafettePipelineTrigger');
goog.provide('proto.estafette.ci.manifest.v1.EstafettePubSubEvent');
goog.provide('proto.estafette.ci.manifest.v1.EstafettePubSubTrigger');
goog.provide('proto.estafette.ci.manifest.v1.EstafetteRelease');
goog.provide('proto.estafette.ci.manifest.v1.EstafetteReleaseAction');
goog.provide('proto.estafette.ci.manifest.v1.EstafetteReleaseEvent');
goog.provide('proto.estafette.ci.manifest.v1.EstafetteReleaseTrigger');
goog.provide('proto.estafette.ci.manifest.v1.EstafetteSemverVersion');
goog.provide('proto.estafette.ci.manifest.v1.EstafetteStage');
goog.provide('proto.estafette.ci.manifest.v1.EstafetteTrigger');
goog.provide('proto.estafette.ci.manifest.v1.EstafetteTriggerBuildAction');
goog.provide('proto.estafette.ci.manifest.v1.EstafetteTriggerReleaseAction');
goog.provide('proto.estafette.ci.manifest.v1.EstafetteVersion');
goog.provide('proto.estafette.ci.manifest.v1.EstafetteVersionParams');
goog.provide('proto.estafette.ci.manifest.v1.StringOrStringArray');

goog.require('jspb.BinaryReader');
goog.require('jspb.BinaryWriter');
goog.require('jspb.Map');
goog.require('jspb.Message');
goog.require('proto.google.protobuf.Any');
goog.require('proto.google.protobuf.Timestamp');


/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.estafette.ci.manifest.v1.EstafetteBuilder = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.estafette.ci.manifest.v1.EstafetteBuilder, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.estafette.ci.manifest.v1.EstafetteBuilder.displayName = 'proto.estafette.ci.manifest.v1.EstafetteBuilder';
}


if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.estafette.ci.manifest.v1.EstafetteBuilder.prototype.toObject = function(opt_includeInstance) {
  return proto.estafette.ci.manifest.v1.EstafetteBuilder.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.estafette.ci.manifest.v1.EstafetteBuilder} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.estafette.ci.manifest.v1.EstafetteBuilder.toObject = function(includeInstance, msg) {
  var f, obj = {
    track: jspb.Message.getFieldWithDefault(msg, 1, ""),
    operatingSystem: jspb.Message.getFieldWithDefault(msg, 2, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.estafette.ci.manifest.v1.EstafetteBuilder}
 */
proto.estafette.ci.manifest.v1.EstafetteBuilder.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.estafette.ci.manifest.v1.EstafetteBuilder;
  return proto.estafette.ci.manifest.v1.EstafetteBuilder.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.estafette.ci.manifest.v1.EstafetteBuilder} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.estafette.ci.manifest.v1.EstafetteBuilder}
 */
proto.estafette.ci.manifest.v1.EstafetteBuilder.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setTrack(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setOperatingSystem(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.estafette.ci.manifest.v1.EstafetteBuilder.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.estafette.ci.manifest.v1.EstafetteBuilder.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.estafette.ci.manifest.v1.EstafetteBuilder} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.estafette.ci.manifest.v1.EstafetteBuilder.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getTrack();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getOperatingSystem();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
};


/**
 * optional string track = 1;
 * @return {string}
 */
proto.estafette.ci.manifest.v1.EstafetteBuilder.prototype.getTrack = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/** @param {string} value */
proto.estafette.ci.manifest.v1.EstafetteBuilder.prototype.setTrack = function(value) {
  jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string operating_system = 2;
 * @return {string}
 */
proto.estafette.ci.manifest.v1.EstafetteBuilder.prototype.getOperatingSystem = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/** @param {string} value */
proto.estafette.ci.manifest.v1.EstafetteBuilder.prototype.setOperatingSystem = function(value) {
  jspb.Message.setProto3StringField(this, 2, value);
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.estafette.ci.manifest.v1.EstafetteCronEvent = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.estafette.ci.manifest.v1.EstafetteCronEvent, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.estafette.ci.manifest.v1.EstafetteCronEvent.displayName = 'proto.estafette.ci.manifest.v1.EstafetteCronEvent';
}


if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.estafette.ci.manifest.v1.EstafetteCronEvent.prototype.toObject = function(opt_includeInstance) {
  return proto.estafette.ci.manifest.v1.EstafetteCronEvent.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.estafette.ci.manifest.v1.EstafetteCronEvent} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.estafette.ci.manifest.v1.EstafetteCronEvent.toObject = function(includeInstance, msg) {
  var f, obj = {
    time: (f = msg.getTime()) && proto.google.protobuf.Timestamp.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.estafette.ci.manifest.v1.EstafetteCronEvent}
 */
proto.estafette.ci.manifest.v1.EstafetteCronEvent.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.estafette.ci.manifest.v1.EstafetteCronEvent;
  return proto.estafette.ci.manifest.v1.EstafetteCronEvent.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.estafette.ci.manifest.v1.EstafetteCronEvent} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.estafette.ci.manifest.v1.EstafetteCronEvent}
 */
proto.estafette.ci.manifest.v1.EstafetteCronEvent.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.google.protobuf.Timestamp;
      reader.readMessage(value,proto.google.protobuf.Timestamp.deserializeBinaryFromReader);
      msg.setTime(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.estafette.ci.manifest.v1.EstafetteCronEvent.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.estafette.ci.manifest.v1.EstafetteCronEvent.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.estafette.ci.manifest.v1.EstafetteCronEvent} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.estafette.ci.manifest.v1.EstafetteCronEvent.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getTime();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      proto.google.protobuf.Timestamp.serializeBinaryToWriter
    );
  }
};


/**
 * optional google.protobuf.Timestamp time = 1;
 * @return {?proto.google.protobuf.Timestamp}
 */
proto.estafette.ci.manifest.v1.EstafetteCronEvent.prototype.getTime = function() {
  return /** @type{?proto.google.protobuf.Timestamp} */ (
    jspb.Message.getWrapperField(this, proto.google.protobuf.Timestamp, 1));
};


/** @param {?proto.google.protobuf.Timestamp|undefined} value */
proto.estafette.ci.manifest.v1.EstafetteCronEvent.prototype.setTime = function(value) {
  jspb.Message.setWrapperField(this, 1, value);
};


proto.estafette.ci.manifest.v1.EstafetteCronEvent.prototype.clearTime = function() {
  this.setTime(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.estafette.ci.manifest.v1.EstafetteCronEvent.prototype.hasTime = function() {
  return jspb.Message.getField(this, 1) != null;
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.estafette.ci.manifest.v1.EstafetteCronTrigger = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.estafette.ci.manifest.v1.EstafetteCronTrigger, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.estafette.ci.manifest.v1.EstafetteCronTrigger.displayName = 'proto.estafette.ci.manifest.v1.EstafetteCronTrigger';
}


if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.estafette.ci.manifest.v1.EstafetteCronTrigger.prototype.toObject = function(opt_includeInstance) {
  return proto.estafette.ci.manifest.v1.EstafetteCronTrigger.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.estafette.ci.manifest.v1.EstafetteCronTrigger} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.estafette.ci.manifest.v1.EstafetteCronTrigger.toObject = function(includeInstance, msg) {
  var f, obj = {
    schedule: jspb.Message.getFieldWithDefault(msg, 1, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.estafette.ci.manifest.v1.EstafetteCronTrigger}
 */
proto.estafette.ci.manifest.v1.EstafetteCronTrigger.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.estafette.ci.manifest.v1.EstafetteCronTrigger;
  return proto.estafette.ci.manifest.v1.EstafetteCronTrigger.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.estafette.ci.manifest.v1.EstafetteCronTrigger} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.estafette.ci.manifest.v1.EstafetteCronTrigger}
 */
proto.estafette.ci.manifest.v1.EstafetteCronTrigger.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setSchedule(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.estafette.ci.manifest.v1.EstafetteCronTrigger.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.estafette.ci.manifest.v1.EstafetteCronTrigger.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.estafette.ci.manifest.v1.EstafetteCronTrigger} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.estafette.ci.manifest.v1.EstafetteCronTrigger.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getSchedule();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
};


/**
 * optional string schedule = 1;
 * @return {string}
 */
proto.estafette.ci.manifest.v1.EstafetteCronTrigger.prototype.getSchedule = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/** @param {string} value */
proto.estafette.ci.manifest.v1.EstafetteCronTrigger.prototype.setSchedule = function(value) {
  jspb.Message.setProto3StringField(this, 1, value);
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.estafette.ci.manifest.v1.EstafetteCustomVersion = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.estafette.ci.manifest.v1.EstafetteCustomVersion, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.estafette.ci.manifest.v1.EstafetteCustomVersion.displayName = 'proto.estafette.ci.manifest.v1.EstafetteCustomVersion';
}


if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.estafette.ci.manifest.v1.EstafetteCustomVersion.prototype.toObject = function(opt_includeInstance) {
  return proto.estafette.ci.manifest.v1.EstafetteCustomVersion.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.estafette.ci.manifest.v1.EstafetteCustomVersion} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.estafette.ci.manifest.v1.EstafetteCustomVersion.toObject = function(includeInstance, msg) {
  var f, obj = {
    labelTemplate: jspb.Message.getFieldWithDefault(msg, 1, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.estafette.ci.manifest.v1.EstafetteCustomVersion}
 */
proto.estafette.ci.manifest.v1.EstafetteCustomVersion.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.estafette.ci.manifest.v1.EstafetteCustomVersion;
  return proto.estafette.ci.manifest.v1.EstafetteCustomVersion.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.estafette.ci.manifest.v1.EstafetteCustomVersion} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.estafette.ci.manifest.v1.EstafetteCustomVersion}
 */
proto.estafette.ci.manifest.v1.EstafetteCustomVersion.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setLabelTemplate(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.estafette.ci.manifest.v1.EstafetteCustomVersion.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.estafette.ci.manifest.v1.EstafetteCustomVersion.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.estafette.ci.manifest.v1.EstafetteCustomVersion} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.estafette.ci.manifest.v1.EstafetteCustomVersion.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getLabelTemplate();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
};


/**
 * optional string label_template = 1;
 * @return {string}
 */
proto.estafette.ci.manifest.v1.EstafetteCustomVersion.prototype.getLabelTemplate = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/** @param {string} value */
proto.estafette.ci.manifest.v1.EstafetteCustomVersion.prototype.setLabelTemplate = function(value) {
  jspb.Message.setProto3StringField(this, 1, value);
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.estafette.ci.manifest.v1.EstafetteDockerEvent = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.estafette.ci.manifest.v1.EstafetteDockerEvent, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.estafette.ci.manifest.v1.EstafetteDockerEvent.displayName = 'proto.estafette.ci.manifest.v1.EstafetteDockerEvent';
}


if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.estafette.ci.manifest.v1.EstafetteDockerEvent.prototype.toObject = function(opt_includeInstance) {
  return proto.estafette.ci.manifest.v1.EstafetteDockerEvent.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.estafette.ci.manifest.v1.EstafetteDockerEvent} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.estafette.ci.manifest.v1.EstafetteDockerEvent.toObject = function(includeInstance, msg) {
  var f, obj = {
    event: jspb.Message.getFieldWithDefault(msg, 1, ""),
    image: jspb.Message.getFieldWithDefault(msg, 2, ""),
    tag: jspb.Message.getFieldWithDefault(msg, 3, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.estafette.ci.manifest.v1.EstafetteDockerEvent}
 */
proto.estafette.ci.manifest.v1.EstafetteDockerEvent.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.estafette.ci.manifest.v1.EstafetteDockerEvent;
  return proto.estafette.ci.manifest.v1.EstafetteDockerEvent.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.estafette.ci.manifest.v1.EstafetteDockerEvent} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.estafette.ci.manifest.v1.EstafetteDockerEvent}
 */
proto.estafette.ci.manifest.v1.EstafetteDockerEvent.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setEvent(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setImage(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setTag(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.estafette.ci.manifest.v1.EstafetteDockerEvent.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.estafette.ci.manifest.v1.EstafetteDockerEvent.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.estafette.ci.manifest.v1.EstafetteDockerEvent} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.estafette.ci.manifest.v1.EstafetteDockerEvent.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getEvent();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getImage();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getTag();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
};


/**
 * optional string event = 1;
 * @return {string}
 */
proto.estafette.ci.manifest.v1.EstafetteDockerEvent.prototype.getEvent = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/** @param {string} value */
proto.estafette.ci.manifest.v1.EstafetteDockerEvent.prototype.setEvent = function(value) {
  jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string image = 2;
 * @return {string}
 */
proto.estafette.ci.manifest.v1.EstafetteDockerEvent.prototype.getImage = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/** @param {string} value */
proto.estafette.ci.manifest.v1.EstafetteDockerEvent.prototype.setImage = function(value) {
  jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional string tag = 3;
 * @return {string}
 */
proto.estafette.ci.manifest.v1.EstafetteDockerEvent.prototype.getTag = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/** @param {string} value */
proto.estafette.ci.manifest.v1.EstafetteDockerEvent.prototype.setTag = function(value) {
  jspb.Message.setProto3StringField(this, 3, value);
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.estafette.ci.manifest.v1.EstafetteDockerTrigger = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.estafette.ci.manifest.v1.EstafetteDockerTrigger, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.estafette.ci.manifest.v1.EstafetteDockerTrigger.displayName = 'proto.estafette.ci.manifest.v1.EstafetteDockerTrigger';
}


if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.estafette.ci.manifest.v1.EstafetteDockerTrigger.prototype.toObject = function(opt_includeInstance) {
  return proto.estafette.ci.manifest.v1.EstafetteDockerTrigger.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.estafette.ci.manifest.v1.EstafetteDockerTrigger} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.estafette.ci.manifest.v1.EstafetteDockerTrigger.toObject = function(includeInstance, msg) {
  var f, obj = {
    event: jspb.Message.getFieldWithDefault(msg, 1, ""),
    image: jspb.Message.getFieldWithDefault(msg, 2, ""),
    tag: jspb.Message.getFieldWithDefault(msg, 3, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.estafette.ci.manifest.v1.EstafetteDockerTrigger}
 */
proto.estafette.ci.manifest.v1.EstafetteDockerTrigger.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.estafette.ci.manifest.v1.EstafetteDockerTrigger;
  return proto.estafette.ci.manifest.v1.EstafetteDockerTrigger.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.estafette.ci.manifest.v1.EstafetteDockerTrigger} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.estafette.ci.manifest.v1.EstafetteDockerTrigger}
 */
proto.estafette.ci.manifest.v1.EstafetteDockerTrigger.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setEvent(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setImage(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setTag(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.estafette.ci.manifest.v1.EstafetteDockerTrigger.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.estafette.ci.manifest.v1.EstafetteDockerTrigger.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.estafette.ci.manifest.v1.EstafetteDockerTrigger} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.estafette.ci.manifest.v1.EstafetteDockerTrigger.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getEvent();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getImage();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getTag();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
};


/**
 * optional string event = 1;
 * @return {string}
 */
proto.estafette.ci.manifest.v1.EstafetteDockerTrigger.prototype.getEvent = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/** @param {string} value */
proto.estafette.ci.manifest.v1.EstafetteDockerTrigger.prototype.setEvent = function(value) {
  jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string image = 2;
 * @return {string}
 */
proto.estafette.ci.manifest.v1.EstafetteDockerTrigger.prototype.getImage = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/** @param {string} value */
proto.estafette.ci.manifest.v1.EstafetteDockerTrigger.prototype.setImage = function(value) {
  jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional string tag = 3;
 * @return {string}
 */
proto.estafette.ci.manifest.v1.EstafetteDockerTrigger.prototype.getTag = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/** @param {string} value */
proto.estafette.ci.manifest.v1.EstafetteDockerTrigger.prototype.setTag = function(value) {
  jspb.Message.setProto3StringField(this, 3, value);
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.estafette.ci.manifest.v1.EstafetteGitEvent = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.estafette.ci.manifest.v1.EstafetteGitEvent, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.estafette.ci.manifest.v1.EstafetteGitEvent.displayName = 'proto.estafette.ci.manifest.v1.EstafetteGitEvent';
}


if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.estafette.ci.manifest.v1.EstafetteGitEvent.prototype.toObject = function(opt_includeInstance) {
  return proto.estafette.ci.manifest.v1.EstafetteGitEvent.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.estafette.ci.manifest.v1.EstafetteGitEvent} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.estafette.ci.manifest.v1.EstafetteGitEvent.toObject = function(includeInstance, msg) {
  var f, obj = {
    event: jspb.Message.getFieldWithDefault(msg, 1, ""),
    repository: jspb.Message.getFieldWithDefault(msg, 2, ""),
    branch: jspb.Message.getFieldWithDefault(msg, 3, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.estafette.ci.manifest.v1.EstafetteGitEvent}
 */
proto.estafette.ci.manifest.v1.EstafetteGitEvent.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.estafette.ci.manifest.v1.EstafetteGitEvent;
  return proto.estafette.ci.manifest.v1.EstafetteGitEvent.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.estafette.ci.manifest.v1.EstafetteGitEvent} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.estafette.ci.manifest.v1.EstafetteGitEvent}
 */
proto.estafette.ci.manifest.v1.EstafetteGitEvent.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setEvent(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setRepository(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setBranch(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.estafette.ci.manifest.v1.EstafetteGitEvent.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.estafette.ci.manifest.v1.EstafetteGitEvent.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.estafette.ci.manifest.v1.EstafetteGitEvent} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.estafette.ci.manifest.v1.EstafetteGitEvent.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getEvent();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getRepository();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getBranch();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
};


/**
 * optional string event = 1;
 * @return {string}
 */
proto.estafette.ci.manifest.v1.EstafetteGitEvent.prototype.getEvent = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/** @param {string} value */
proto.estafette.ci.manifest.v1.EstafetteGitEvent.prototype.setEvent = function(value) {
  jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string repository = 2;
 * @return {string}
 */
proto.estafette.ci.manifest.v1.EstafetteGitEvent.prototype.getRepository = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/** @param {string} value */
proto.estafette.ci.manifest.v1.EstafetteGitEvent.prototype.setRepository = function(value) {
  jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional string branch = 3;
 * @return {string}
 */
proto.estafette.ci.manifest.v1.EstafetteGitEvent.prototype.getBranch = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/** @param {string} value */
proto.estafette.ci.manifest.v1.EstafetteGitEvent.prototype.setBranch = function(value) {
  jspb.Message.setProto3StringField(this, 3, value);
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.estafette.ci.manifest.v1.EstafetteManualEvent = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.estafette.ci.manifest.v1.EstafetteManualEvent, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.estafette.ci.manifest.v1.EstafetteManualEvent.displayName = 'proto.estafette.ci.manifest.v1.EstafetteManualEvent';
}


if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.estafette.ci.manifest.v1.EstafetteManualEvent.prototype.toObject = function(opt_includeInstance) {
  return proto.estafette.ci.manifest.v1.EstafetteManualEvent.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.estafette.ci.manifest.v1.EstafetteManualEvent} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.estafette.ci.manifest.v1.EstafetteManualEvent.toObject = function(includeInstance, msg) {
  var f, obj = {
    userId: jspb.Message.getFieldWithDefault(msg, 1, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.estafette.ci.manifest.v1.EstafetteManualEvent}
 */
proto.estafette.ci.manifest.v1.EstafetteManualEvent.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.estafette.ci.manifest.v1.EstafetteManualEvent;
  return proto.estafette.ci.manifest.v1.EstafetteManualEvent.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.estafette.ci.manifest.v1.EstafetteManualEvent} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.estafette.ci.manifest.v1.EstafetteManualEvent}
 */
proto.estafette.ci.manifest.v1.EstafetteManualEvent.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setUserId(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.estafette.ci.manifest.v1.EstafetteManualEvent.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.estafette.ci.manifest.v1.EstafetteManualEvent.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.estafette.ci.manifest.v1.EstafetteManualEvent} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.estafette.ci.manifest.v1.EstafetteManualEvent.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getUserId();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
};


/**
 * optional string user_id = 1;
 * @return {string}
 */
proto.estafette.ci.manifest.v1.EstafetteManualEvent.prototype.getUserId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/** @param {string} value */
proto.estafette.ci.manifest.v1.EstafetteManualEvent.prototype.setUserId = function(value) {
  jspb.Message.setProto3StringField(this, 1, value);
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.estafette.ci.manifest.v1.EstafettePipelineEvent = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.estafette.ci.manifest.v1.EstafettePipelineEvent, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.estafette.ci.manifest.v1.EstafettePipelineEvent.displayName = 'proto.estafette.ci.manifest.v1.EstafettePipelineEvent';
}


if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.estafette.ci.manifest.v1.EstafettePipelineEvent.prototype.toObject = function(opt_includeInstance) {
  return proto.estafette.ci.manifest.v1.EstafettePipelineEvent.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.estafette.ci.manifest.v1.EstafettePipelineEvent} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.estafette.ci.manifest.v1.EstafettePipelineEvent.toObject = function(includeInstance, msg) {
  var f, obj = {
    buildVersion: jspb.Message.getFieldWithDefault(msg, 1, ""),
    repoSource: jspb.Message.getFieldWithDefault(msg, 2, ""),
    repoOwner: jspb.Message.getFieldWithDefault(msg, 3, ""),
    repoName: jspb.Message.getFieldWithDefault(msg, 4, ""),
    repoBranch: jspb.Message.getFieldWithDefault(msg, 5, ""),
    status: jspb.Message.getFieldWithDefault(msg, 6, ""),
    event: jspb.Message.getFieldWithDefault(msg, 7, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.estafette.ci.manifest.v1.EstafettePipelineEvent}
 */
proto.estafette.ci.manifest.v1.EstafettePipelineEvent.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.estafette.ci.manifest.v1.EstafettePipelineEvent;
  return proto.estafette.ci.manifest.v1.EstafettePipelineEvent.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.estafette.ci.manifest.v1.EstafettePipelineEvent} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.estafette.ci.manifest.v1.EstafettePipelineEvent}
 */
proto.estafette.ci.manifest.v1.EstafettePipelineEvent.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setBuildVersion(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setRepoSource(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setRepoOwner(value);
      break;
    case 4:
      var value = /** @type {string} */ (reader.readString());
      msg.setRepoName(value);
      break;
    case 5:
      var value = /** @type {string} */ (reader.readString());
      msg.setRepoBranch(value);
      break;
    case 6:
      var value = /** @type {string} */ (reader.readString());
      msg.setStatus(value);
      break;
    case 7:
      var value = /** @type {string} */ (reader.readString());
      msg.setEvent(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.estafette.ci.manifest.v1.EstafettePipelineEvent.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.estafette.ci.manifest.v1.EstafettePipelineEvent.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.estafette.ci.manifest.v1.EstafettePipelineEvent} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.estafette.ci.manifest.v1.EstafettePipelineEvent.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getBuildVersion();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getRepoSource();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getRepoOwner();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
  f = message.getRepoName();
  if (f.length > 0) {
    writer.writeString(
      4,
      f
    );
  }
  f = message.getRepoBranch();
  if (f.length > 0) {
    writer.writeString(
      5,
      f
    );
  }
  f = message.getStatus();
  if (f.length > 0) {
    writer.writeString(
      6,
      f
    );
  }
  f = message.getEvent();
  if (f.length > 0) {
    writer.writeString(
      7,
      f
    );
  }
};


/**
 * optional string build_version = 1;
 * @return {string}
 */
proto.estafette.ci.manifest.v1.EstafettePipelineEvent.prototype.getBuildVersion = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/** @param {string} value */
proto.estafette.ci.manifest.v1.EstafettePipelineEvent.prototype.setBuildVersion = function(value) {
  jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string repo_source = 2;
 * @return {string}
 */
proto.estafette.ci.manifest.v1.EstafettePipelineEvent.prototype.getRepoSource = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/** @param {string} value */
proto.estafette.ci.manifest.v1.EstafettePipelineEvent.prototype.setRepoSource = function(value) {
  jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional string repo_owner = 3;
 * @return {string}
 */
proto.estafette.ci.manifest.v1.EstafettePipelineEvent.prototype.getRepoOwner = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/** @param {string} value */
proto.estafette.ci.manifest.v1.EstafettePipelineEvent.prototype.setRepoOwner = function(value) {
  jspb.Message.setProto3StringField(this, 3, value);
};


/**
 * optional string repo_name = 4;
 * @return {string}
 */
proto.estafette.ci.manifest.v1.EstafettePipelineEvent.prototype.getRepoName = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 4, ""));
};


/** @param {string} value */
proto.estafette.ci.manifest.v1.EstafettePipelineEvent.prototype.setRepoName = function(value) {
  jspb.Message.setProto3StringField(this, 4, value);
};


/**
 * optional string repo_branch = 5;
 * @return {string}
 */
proto.estafette.ci.manifest.v1.EstafettePipelineEvent.prototype.getRepoBranch = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 5, ""));
};


/** @param {string} value */
proto.estafette.ci.manifest.v1.EstafettePipelineEvent.prototype.setRepoBranch = function(value) {
  jspb.Message.setProto3StringField(this, 5, value);
};


/**
 * optional string status = 6;
 * @return {string}
 */
proto.estafette.ci.manifest.v1.EstafettePipelineEvent.prototype.getStatus = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 6, ""));
};


/** @param {string} value */
proto.estafette.ci.manifest.v1.EstafettePipelineEvent.prototype.setStatus = function(value) {
  jspb.Message.setProto3StringField(this, 6, value);
};


/**
 * optional string event = 7;
 * @return {string}
 */
proto.estafette.ci.manifest.v1.EstafettePipelineEvent.prototype.getEvent = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 7, ""));
};


/** @param {string} value */
proto.estafette.ci.manifest.v1.EstafettePipelineEvent.prototype.setEvent = function(value) {
  jspb.Message.setProto3StringField(this, 7, value);
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.estafette.ci.manifest.v1.EstafettePubSubEvent = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.estafette.ci.manifest.v1.EstafettePubSubEvent, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.estafette.ci.manifest.v1.EstafettePubSubEvent.displayName = 'proto.estafette.ci.manifest.v1.EstafettePubSubEvent';
}


if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.estafette.ci.manifest.v1.EstafettePubSubEvent.prototype.toObject = function(opt_includeInstance) {
  return proto.estafette.ci.manifest.v1.EstafettePubSubEvent.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.estafette.ci.manifest.v1.EstafettePubSubEvent} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.estafette.ci.manifest.v1.EstafettePubSubEvent.toObject = function(includeInstance, msg) {
  var f, obj = {
    project: jspb.Message.getFieldWithDefault(msg, 1, ""),
    topic: jspb.Message.getFieldWithDefault(msg, 2, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.estafette.ci.manifest.v1.EstafettePubSubEvent}
 */
proto.estafette.ci.manifest.v1.EstafettePubSubEvent.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.estafette.ci.manifest.v1.EstafettePubSubEvent;
  return proto.estafette.ci.manifest.v1.EstafettePubSubEvent.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.estafette.ci.manifest.v1.EstafettePubSubEvent} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.estafette.ci.manifest.v1.EstafettePubSubEvent}
 */
proto.estafette.ci.manifest.v1.EstafettePubSubEvent.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setProject(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setTopic(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.estafette.ci.manifest.v1.EstafettePubSubEvent.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.estafette.ci.manifest.v1.EstafettePubSubEvent.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.estafette.ci.manifest.v1.EstafettePubSubEvent} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.estafette.ci.manifest.v1.EstafettePubSubEvent.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getProject();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getTopic();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
};


/**
 * optional string project = 1;
 * @return {string}
 */
proto.estafette.ci.manifest.v1.EstafettePubSubEvent.prototype.getProject = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/** @param {string} value */
proto.estafette.ci.manifest.v1.EstafettePubSubEvent.prototype.setProject = function(value) {
  jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string topic = 2;
 * @return {string}
 */
proto.estafette.ci.manifest.v1.EstafettePubSubEvent.prototype.getTopic = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/** @param {string} value */
proto.estafette.ci.manifest.v1.EstafettePubSubEvent.prototype.setTopic = function(value) {
  jspb.Message.setProto3StringField(this, 2, value);
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.estafette.ci.manifest.v1.EstafetteReleaseEvent = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.estafette.ci.manifest.v1.EstafetteReleaseEvent, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.estafette.ci.manifest.v1.EstafetteReleaseEvent.displayName = 'proto.estafette.ci.manifest.v1.EstafetteReleaseEvent';
}


if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.estafette.ci.manifest.v1.EstafetteReleaseEvent.prototype.toObject = function(opt_includeInstance) {
  return proto.estafette.ci.manifest.v1.EstafetteReleaseEvent.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.estafette.ci.manifest.v1.EstafetteReleaseEvent} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.estafette.ci.manifest.v1.EstafetteReleaseEvent.toObject = function(includeInstance, msg) {
  var f, obj = {
    releaseVersion: jspb.Message.getFieldWithDefault(msg, 1, ""),
    repoSource: jspb.Message.getFieldWithDefault(msg, 2, ""),
    repoOwner: jspb.Message.getFieldWithDefault(msg, 3, ""),
    repoName: jspb.Message.getFieldWithDefault(msg, 4, ""),
    target: jspb.Message.getFieldWithDefault(msg, 5, ""),
    status: jspb.Message.getFieldWithDefault(msg, 6, ""),
    event: jspb.Message.getFieldWithDefault(msg, 7, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.estafette.ci.manifest.v1.EstafetteReleaseEvent}
 */
proto.estafette.ci.manifest.v1.EstafetteReleaseEvent.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.estafette.ci.manifest.v1.EstafetteReleaseEvent;
  return proto.estafette.ci.manifest.v1.EstafetteReleaseEvent.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.estafette.ci.manifest.v1.EstafetteReleaseEvent} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.estafette.ci.manifest.v1.EstafetteReleaseEvent}
 */
proto.estafette.ci.manifest.v1.EstafetteReleaseEvent.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setReleaseVersion(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setRepoSource(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setRepoOwner(value);
      break;
    case 4:
      var value = /** @type {string} */ (reader.readString());
      msg.setRepoName(value);
      break;
    case 5:
      var value = /** @type {string} */ (reader.readString());
      msg.setTarget(value);
      break;
    case 6:
      var value = /** @type {string} */ (reader.readString());
      msg.setStatus(value);
      break;
    case 7:
      var value = /** @type {string} */ (reader.readString());
      msg.setEvent(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.estafette.ci.manifest.v1.EstafetteReleaseEvent.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.estafette.ci.manifest.v1.EstafetteReleaseEvent.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.estafette.ci.manifest.v1.EstafetteReleaseEvent} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.estafette.ci.manifest.v1.EstafetteReleaseEvent.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getReleaseVersion();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getRepoSource();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getRepoOwner();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
  f = message.getRepoName();
  if (f.length > 0) {
    writer.writeString(
      4,
      f
    );
  }
  f = message.getTarget();
  if (f.length > 0) {
    writer.writeString(
      5,
      f
    );
  }
  f = message.getStatus();
  if (f.length > 0) {
    writer.writeString(
      6,
      f
    );
  }
  f = message.getEvent();
  if (f.length > 0) {
    writer.writeString(
      7,
      f
    );
  }
};


/**
 * optional string release_version = 1;
 * @return {string}
 */
proto.estafette.ci.manifest.v1.EstafetteReleaseEvent.prototype.getReleaseVersion = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/** @param {string} value */
proto.estafette.ci.manifest.v1.EstafetteReleaseEvent.prototype.setReleaseVersion = function(value) {
  jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string repo_source = 2;
 * @return {string}
 */
proto.estafette.ci.manifest.v1.EstafetteReleaseEvent.prototype.getRepoSource = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/** @param {string} value */
proto.estafette.ci.manifest.v1.EstafetteReleaseEvent.prototype.setRepoSource = function(value) {
  jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional string repo_owner = 3;
 * @return {string}
 */
proto.estafette.ci.manifest.v1.EstafetteReleaseEvent.prototype.getRepoOwner = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/** @param {string} value */
proto.estafette.ci.manifest.v1.EstafetteReleaseEvent.prototype.setRepoOwner = function(value) {
  jspb.Message.setProto3StringField(this, 3, value);
};


/**
 * optional string repo_name = 4;
 * @return {string}
 */
proto.estafette.ci.manifest.v1.EstafetteReleaseEvent.prototype.getRepoName = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 4, ""));
};


/** @param {string} value */
proto.estafette.ci.manifest.v1.EstafetteReleaseEvent.prototype.setRepoName = function(value) {
  jspb.Message.setProto3StringField(this, 4, value);
};


/**
 * optional string target = 5;
 * @return {string}
 */
proto.estafette.ci.manifest.v1.EstafetteReleaseEvent.prototype.getTarget = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 5, ""));
};


/** @param {string} value */
proto.estafette.ci.manifest.v1.EstafetteReleaseEvent.prototype.setTarget = function(value) {
  jspb.Message.setProto3StringField(this, 5, value);
};


/**
 * optional string status = 6;
 * @return {string}
 */
proto.estafette.ci.manifest.v1.EstafetteReleaseEvent.prototype.getStatus = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 6, ""));
};


/** @param {string} value */
proto.estafette.ci.manifest.v1.EstafetteReleaseEvent.prototype.setStatus = function(value) {
  jspb.Message.setProto3StringField(this, 6, value);
};


/**
 * optional string event = 7;
 * @return {string}
 */
proto.estafette.ci.manifest.v1.EstafetteReleaseEvent.prototype.getEvent = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 7, ""));
};


/** @param {string} value */
proto.estafette.ci.manifest.v1.EstafetteReleaseEvent.prototype.setEvent = function(value) {
  jspb.Message.setProto3StringField(this, 7, value);
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.estafette.ci.manifest.v1.EstafetteEvent = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.estafette.ci.manifest.v1.EstafetteEvent, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.estafette.ci.manifest.v1.EstafetteEvent.displayName = 'proto.estafette.ci.manifest.v1.EstafetteEvent';
}


if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.estafette.ci.manifest.v1.EstafetteEvent.prototype.toObject = function(opt_includeInstance) {
  return proto.estafette.ci.manifest.v1.EstafetteEvent.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.estafette.ci.manifest.v1.EstafetteEvent} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.estafette.ci.manifest.v1.EstafetteEvent.toObject = function(includeInstance, msg) {
  var f, obj = {
    pipeline: (f = msg.getPipeline()) && proto.estafette.ci.manifest.v1.EstafettePipelineEvent.toObject(includeInstance, f),
    release: (f = msg.getRelease()) && proto.estafette.ci.manifest.v1.EstafetteReleaseEvent.toObject(includeInstance, f),
    git: (f = msg.getGit()) && proto.estafette.ci.manifest.v1.EstafetteGitEvent.toObject(includeInstance, f),
    docker: (f = msg.getDocker()) && proto.estafette.ci.manifest.v1.EstafetteDockerEvent.toObject(includeInstance, f),
    cron: (f = msg.getCron()) && proto.estafette.ci.manifest.v1.EstafetteCronEvent.toObject(includeInstance, f),
    pubSub: (f = msg.getPubSub()) && proto.estafette.ci.manifest.v1.EstafettePubSubEvent.toObject(includeInstance, f),
    manual: (f = msg.getManual()) && proto.estafette.ci.manifest.v1.EstafetteManualEvent.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.estafette.ci.manifest.v1.EstafetteEvent}
 */
proto.estafette.ci.manifest.v1.EstafetteEvent.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.estafette.ci.manifest.v1.EstafetteEvent;
  return proto.estafette.ci.manifest.v1.EstafetteEvent.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.estafette.ci.manifest.v1.EstafetteEvent} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.estafette.ci.manifest.v1.EstafetteEvent}
 */
proto.estafette.ci.manifest.v1.EstafetteEvent.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.estafette.ci.manifest.v1.EstafettePipelineEvent;
      reader.readMessage(value,proto.estafette.ci.manifest.v1.EstafettePipelineEvent.deserializeBinaryFromReader);
      msg.setPipeline(value);
      break;
    case 2:
      var value = new proto.estafette.ci.manifest.v1.EstafetteReleaseEvent;
      reader.readMessage(value,proto.estafette.ci.manifest.v1.EstafetteReleaseEvent.deserializeBinaryFromReader);
      msg.setRelease(value);
      break;
    case 3:
      var value = new proto.estafette.ci.manifest.v1.EstafetteGitEvent;
      reader.readMessage(value,proto.estafette.ci.manifest.v1.EstafetteGitEvent.deserializeBinaryFromReader);
      msg.setGit(value);
      break;
    case 4:
      var value = new proto.estafette.ci.manifest.v1.EstafetteDockerEvent;
      reader.readMessage(value,proto.estafette.ci.manifest.v1.EstafetteDockerEvent.deserializeBinaryFromReader);
      msg.setDocker(value);
      break;
    case 5:
      var value = new proto.estafette.ci.manifest.v1.EstafetteCronEvent;
      reader.readMessage(value,proto.estafette.ci.manifest.v1.EstafetteCronEvent.deserializeBinaryFromReader);
      msg.setCron(value);
      break;
    case 6:
      var value = new proto.estafette.ci.manifest.v1.EstafettePubSubEvent;
      reader.readMessage(value,proto.estafette.ci.manifest.v1.EstafettePubSubEvent.deserializeBinaryFromReader);
      msg.setPubSub(value);
      break;
    case 7:
      var value = new proto.estafette.ci.manifest.v1.EstafetteManualEvent;
      reader.readMessage(value,proto.estafette.ci.manifest.v1.EstafetteManualEvent.deserializeBinaryFromReader);
      msg.setManual(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.estafette.ci.manifest.v1.EstafetteEvent.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.estafette.ci.manifest.v1.EstafetteEvent.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.estafette.ci.manifest.v1.EstafetteEvent} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.estafette.ci.manifest.v1.EstafetteEvent.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getPipeline();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      proto.estafette.ci.manifest.v1.EstafettePipelineEvent.serializeBinaryToWriter
    );
  }
  f = message.getRelease();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      proto.estafette.ci.manifest.v1.EstafetteReleaseEvent.serializeBinaryToWriter
    );
  }
  f = message.getGit();
  if (f != null) {
    writer.writeMessage(
      3,
      f,
      proto.estafette.ci.manifest.v1.EstafetteGitEvent.serializeBinaryToWriter
    );
  }
  f = message.getDocker();
  if (f != null) {
    writer.writeMessage(
      4,
      f,
      proto.estafette.ci.manifest.v1.EstafetteDockerEvent.serializeBinaryToWriter
    );
  }
  f = message.getCron();
  if (f != null) {
    writer.writeMessage(
      5,
      f,
      proto.estafette.ci.manifest.v1.EstafetteCronEvent.serializeBinaryToWriter
    );
  }
  f = message.getPubSub();
  if (f != null) {
    writer.writeMessage(
      6,
      f,
      proto.estafette.ci.manifest.v1.EstafettePubSubEvent.serializeBinaryToWriter
    );
  }
  f = message.getManual();
  if (f != null) {
    writer.writeMessage(
      7,
      f,
      proto.estafette.ci.manifest.v1.EstafetteManualEvent.serializeBinaryToWriter
    );
  }
};


/**
 * optional EstafettePipelineEvent pipeline = 1;
 * @return {?proto.estafette.ci.manifest.v1.EstafettePipelineEvent}
 */
proto.estafette.ci.manifest.v1.EstafetteEvent.prototype.getPipeline = function() {
  return /** @type{?proto.estafette.ci.manifest.v1.EstafettePipelineEvent} */ (
    jspb.Message.getWrapperField(this, proto.estafette.ci.manifest.v1.EstafettePipelineEvent, 1));
};


/** @param {?proto.estafette.ci.manifest.v1.EstafettePipelineEvent|undefined} value */
proto.estafette.ci.manifest.v1.EstafetteEvent.prototype.setPipeline = function(value) {
  jspb.Message.setWrapperField(this, 1, value);
};


proto.estafette.ci.manifest.v1.EstafetteEvent.prototype.clearPipeline = function() {
  this.setPipeline(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.estafette.ci.manifest.v1.EstafetteEvent.prototype.hasPipeline = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional EstafetteReleaseEvent release = 2;
 * @return {?proto.estafette.ci.manifest.v1.EstafetteReleaseEvent}
 */
proto.estafette.ci.manifest.v1.EstafetteEvent.prototype.getRelease = function() {
  return /** @type{?proto.estafette.ci.manifest.v1.EstafetteReleaseEvent} */ (
    jspb.Message.getWrapperField(this, proto.estafette.ci.manifest.v1.EstafetteReleaseEvent, 2));
};


/** @param {?proto.estafette.ci.manifest.v1.EstafetteReleaseEvent|undefined} value */
proto.estafette.ci.manifest.v1.EstafetteEvent.prototype.setRelease = function(value) {
  jspb.Message.setWrapperField(this, 2, value);
};


proto.estafette.ci.manifest.v1.EstafetteEvent.prototype.clearRelease = function() {
  this.setRelease(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.estafette.ci.manifest.v1.EstafetteEvent.prototype.hasRelease = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * optional EstafetteGitEvent git = 3;
 * @return {?proto.estafette.ci.manifest.v1.EstafetteGitEvent}
 */
proto.estafette.ci.manifest.v1.EstafetteEvent.prototype.getGit = function() {
  return /** @type{?proto.estafette.ci.manifest.v1.EstafetteGitEvent} */ (
    jspb.Message.getWrapperField(this, proto.estafette.ci.manifest.v1.EstafetteGitEvent, 3));
};


/** @param {?proto.estafette.ci.manifest.v1.EstafetteGitEvent|undefined} value */
proto.estafette.ci.manifest.v1.EstafetteEvent.prototype.setGit = function(value) {
  jspb.Message.setWrapperField(this, 3, value);
};


proto.estafette.ci.manifest.v1.EstafetteEvent.prototype.clearGit = function() {
  this.setGit(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.estafette.ci.manifest.v1.EstafetteEvent.prototype.hasGit = function() {
  return jspb.Message.getField(this, 3) != null;
};


/**
 * optional EstafetteDockerEvent docker = 4;
 * @return {?proto.estafette.ci.manifest.v1.EstafetteDockerEvent}
 */
proto.estafette.ci.manifest.v1.EstafetteEvent.prototype.getDocker = function() {
  return /** @type{?proto.estafette.ci.manifest.v1.EstafetteDockerEvent} */ (
    jspb.Message.getWrapperField(this, proto.estafette.ci.manifest.v1.EstafetteDockerEvent, 4));
};


/** @param {?proto.estafette.ci.manifest.v1.EstafetteDockerEvent|undefined} value */
proto.estafette.ci.manifest.v1.EstafetteEvent.prototype.setDocker = function(value) {
  jspb.Message.setWrapperField(this, 4, value);
};


proto.estafette.ci.manifest.v1.EstafetteEvent.prototype.clearDocker = function() {
  this.setDocker(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.estafette.ci.manifest.v1.EstafetteEvent.prototype.hasDocker = function() {
  return jspb.Message.getField(this, 4) != null;
};


/**
 * optional EstafetteCronEvent cron = 5;
 * @return {?proto.estafette.ci.manifest.v1.EstafetteCronEvent}
 */
proto.estafette.ci.manifest.v1.EstafetteEvent.prototype.getCron = function() {
  return /** @type{?proto.estafette.ci.manifest.v1.EstafetteCronEvent} */ (
    jspb.Message.getWrapperField(this, proto.estafette.ci.manifest.v1.EstafetteCronEvent, 5));
};


/** @param {?proto.estafette.ci.manifest.v1.EstafetteCronEvent|undefined} value */
proto.estafette.ci.manifest.v1.EstafetteEvent.prototype.setCron = function(value) {
  jspb.Message.setWrapperField(this, 5, value);
};


proto.estafette.ci.manifest.v1.EstafetteEvent.prototype.clearCron = function() {
  this.setCron(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.estafette.ci.manifest.v1.EstafetteEvent.prototype.hasCron = function() {
  return jspb.Message.getField(this, 5) != null;
};


/**
 * optional EstafettePubSubEvent pub_sub = 6;
 * @return {?proto.estafette.ci.manifest.v1.EstafettePubSubEvent}
 */
proto.estafette.ci.manifest.v1.EstafetteEvent.prototype.getPubSub = function() {
  return /** @type{?proto.estafette.ci.manifest.v1.EstafettePubSubEvent} */ (
    jspb.Message.getWrapperField(this, proto.estafette.ci.manifest.v1.EstafettePubSubEvent, 6));
};


/** @param {?proto.estafette.ci.manifest.v1.EstafettePubSubEvent|undefined} value */
proto.estafette.ci.manifest.v1.EstafetteEvent.prototype.setPubSub = function(value) {
  jspb.Message.setWrapperField(this, 6, value);
};


proto.estafette.ci.manifest.v1.EstafetteEvent.prototype.clearPubSub = function() {
  this.setPubSub(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.estafette.ci.manifest.v1.EstafetteEvent.prototype.hasPubSub = function() {
  return jspb.Message.getField(this, 6) != null;
};


/**
 * optional EstafetteManualEvent manual = 7;
 * @return {?proto.estafette.ci.manifest.v1.EstafetteManualEvent}
 */
proto.estafette.ci.manifest.v1.EstafetteEvent.prototype.getManual = function() {
  return /** @type{?proto.estafette.ci.manifest.v1.EstafetteManualEvent} */ (
    jspb.Message.getWrapperField(this, proto.estafette.ci.manifest.v1.EstafetteManualEvent, 7));
};


/** @param {?proto.estafette.ci.manifest.v1.EstafetteManualEvent|undefined} value */
proto.estafette.ci.manifest.v1.EstafetteEvent.prototype.setManual = function(value) {
  jspb.Message.setWrapperField(this, 7, value);
};


proto.estafette.ci.manifest.v1.EstafetteEvent.prototype.clearManual = function() {
  this.setManual(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.estafette.ci.manifest.v1.EstafetteEvent.prototype.hasManual = function() {
  return jspb.Message.getField(this, 7) != null;
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.estafette.ci.manifest.v1.EstafetteGitTrigger = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.estafette.ci.manifest.v1.EstafetteGitTrigger, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.estafette.ci.manifest.v1.EstafetteGitTrigger.displayName = 'proto.estafette.ci.manifest.v1.EstafetteGitTrigger';
}


if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.estafette.ci.manifest.v1.EstafetteGitTrigger.prototype.toObject = function(opt_includeInstance) {
  return proto.estafette.ci.manifest.v1.EstafetteGitTrigger.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.estafette.ci.manifest.v1.EstafetteGitTrigger} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.estafette.ci.manifest.v1.EstafetteGitTrigger.toObject = function(includeInstance, msg) {
  var f, obj = {
    event: jspb.Message.getFieldWithDefault(msg, 1, ""),
    repository: jspb.Message.getFieldWithDefault(msg, 2, ""),
    branch: jspb.Message.getFieldWithDefault(msg, 3, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.estafette.ci.manifest.v1.EstafetteGitTrigger}
 */
proto.estafette.ci.manifest.v1.EstafetteGitTrigger.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.estafette.ci.manifest.v1.EstafetteGitTrigger;
  return proto.estafette.ci.manifest.v1.EstafetteGitTrigger.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.estafette.ci.manifest.v1.EstafetteGitTrigger} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.estafette.ci.manifest.v1.EstafetteGitTrigger}
 */
proto.estafette.ci.manifest.v1.EstafetteGitTrigger.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setEvent(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setRepository(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setBranch(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.estafette.ci.manifest.v1.EstafetteGitTrigger.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.estafette.ci.manifest.v1.EstafetteGitTrigger.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.estafette.ci.manifest.v1.EstafetteGitTrigger} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.estafette.ci.manifest.v1.EstafetteGitTrigger.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getEvent();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getRepository();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getBranch();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
};


/**
 * optional string event = 1;
 * @return {string}
 */
proto.estafette.ci.manifest.v1.EstafetteGitTrigger.prototype.getEvent = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/** @param {string} value */
proto.estafette.ci.manifest.v1.EstafetteGitTrigger.prototype.setEvent = function(value) {
  jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string repository = 2;
 * @return {string}
 */
proto.estafette.ci.manifest.v1.EstafetteGitTrigger.prototype.getRepository = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/** @param {string} value */
proto.estafette.ci.manifest.v1.EstafetteGitTrigger.prototype.setRepository = function(value) {
  jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional string branch = 3;
 * @return {string}
 */
proto.estafette.ci.manifest.v1.EstafetteGitTrigger.prototype.getBranch = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/** @param {string} value */
proto.estafette.ci.manifest.v1.EstafetteGitTrigger.prototype.setBranch = function(value) {
  jspb.Message.setProto3StringField(this, 3, value);
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.estafette.ci.manifest.v1.EstafetteReleaseAction = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.estafette.ci.manifest.v1.EstafetteReleaseAction, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.estafette.ci.manifest.v1.EstafetteReleaseAction.displayName = 'proto.estafette.ci.manifest.v1.EstafetteReleaseAction';
}


if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.estafette.ci.manifest.v1.EstafetteReleaseAction.prototype.toObject = function(opt_includeInstance) {
  return proto.estafette.ci.manifest.v1.EstafetteReleaseAction.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.estafette.ci.manifest.v1.EstafetteReleaseAction} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.estafette.ci.manifest.v1.EstafetteReleaseAction.toObject = function(includeInstance, msg) {
  var f, obj = {
    name: jspb.Message.getFieldWithDefault(msg, 1, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.estafette.ci.manifest.v1.EstafetteReleaseAction}
 */
proto.estafette.ci.manifest.v1.EstafetteReleaseAction.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.estafette.ci.manifest.v1.EstafetteReleaseAction;
  return proto.estafette.ci.manifest.v1.EstafetteReleaseAction.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.estafette.ci.manifest.v1.EstafetteReleaseAction} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.estafette.ci.manifest.v1.EstafetteReleaseAction}
 */
proto.estafette.ci.manifest.v1.EstafetteReleaseAction.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setName(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.estafette.ci.manifest.v1.EstafetteReleaseAction.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.estafette.ci.manifest.v1.EstafetteReleaseAction.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.estafette.ci.manifest.v1.EstafetteReleaseAction} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.estafette.ci.manifest.v1.EstafetteReleaseAction.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getName();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
};


/**
 * optional string name = 1;
 * @return {string}
 */
proto.estafette.ci.manifest.v1.EstafetteReleaseAction.prototype.getName = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/** @param {string} value */
proto.estafette.ci.manifest.v1.EstafetteReleaseAction.prototype.setName = function(value) {
  jspb.Message.setProto3StringField(this, 1, value);
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.estafette.ci.manifest.v1.EstafetteStage = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.estafette.ci.manifest.v1.EstafetteStage.repeatedFields_, null);
};
goog.inherits(proto.estafette.ci.manifest.v1.EstafetteStage, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.estafette.ci.manifest.v1.EstafetteStage.displayName = 'proto.estafette.ci.manifest.v1.EstafetteStage';
}
/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.estafette.ci.manifest.v1.EstafetteStage.repeatedFields_ = [5];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.estafette.ci.manifest.v1.EstafetteStage.prototype.toObject = function(opt_includeInstance) {
  return proto.estafette.ci.manifest.v1.EstafetteStage.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.estafette.ci.manifest.v1.EstafetteStage} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.estafette.ci.manifest.v1.EstafetteStage.toObject = function(includeInstance, msg) {
  var f, obj = {
    name: jspb.Message.getFieldWithDefault(msg, 1, ""),
    containerImage: jspb.Message.getFieldWithDefault(msg, 2, ""),
    shell: jspb.Message.getFieldWithDefault(msg, 3, ""),
    workingDirectory: jspb.Message.getFieldWithDefault(msg, 4, ""),
    commandsList: jspb.Message.getRepeatedField(msg, 5),
    when: jspb.Message.getFieldWithDefault(msg, 6, ""),
    envVarsMap: (f = msg.getEnvVarsMap()) ? f.toObject(includeInstance, undefined) : [],
    autoInjected: jspb.Message.getFieldWithDefault(msg, 8, false),
    retries: jspb.Message.getFieldWithDefault(msg, 9, 0),
    customPropertiesMap: (f = msg.getCustomPropertiesMap()) ? f.toObject(includeInstance, proto.google.protobuf.Any.toObject) : []
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.estafette.ci.manifest.v1.EstafetteStage}
 */
proto.estafette.ci.manifest.v1.EstafetteStage.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.estafette.ci.manifest.v1.EstafetteStage;
  return proto.estafette.ci.manifest.v1.EstafetteStage.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.estafette.ci.manifest.v1.EstafetteStage} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.estafette.ci.manifest.v1.EstafetteStage}
 */
proto.estafette.ci.manifest.v1.EstafetteStage.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setName(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setContainerImage(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setShell(value);
      break;
    case 4:
      var value = /** @type {string} */ (reader.readString());
      msg.setWorkingDirectory(value);
      break;
    case 5:
      var value = /** @type {string} */ (reader.readString());
      msg.addCommands(value);
      break;
    case 6:
      var value = /** @type {string} */ (reader.readString());
      msg.setWhen(value);
      break;
    case 7:
      var value = msg.getEnvVarsMap();
      reader.readMessage(value, function(message, reader) {
        jspb.Map.deserializeBinary(message, reader, jspb.BinaryReader.prototype.readString, jspb.BinaryReader.prototype.readString, null, "");
         });
      break;
    case 8:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setAutoInjected(value);
      break;
    case 9:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setRetries(value);
      break;
    case 10:
      var value = msg.getCustomPropertiesMap();
      reader.readMessage(value, function(message, reader) {
        jspb.Map.deserializeBinary(message, reader, jspb.BinaryReader.prototype.readString, jspb.BinaryReader.prototype.readMessage, proto.google.protobuf.Any.deserializeBinaryFromReader, "");
         });
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.estafette.ci.manifest.v1.EstafetteStage.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.estafette.ci.manifest.v1.EstafetteStage.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.estafette.ci.manifest.v1.EstafetteStage} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.estafette.ci.manifest.v1.EstafetteStage.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getName();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getContainerImage();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getShell();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
  f = message.getWorkingDirectory();
  if (f.length > 0) {
    writer.writeString(
      4,
      f
    );
  }
  f = message.getCommandsList();
  if (f.length > 0) {
    writer.writeRepeatedString(
      5,
      f
    );
  }
  f = message.getWhen();
  if (f.length > 0) {
    writer.writeString(
      6,
      f
    );
  }
  f = message.getEnvVarsMap(true);
  if (f && f.getLength() > 0) {
    f.serializeBinary(7, writer, jspb.BinaryWriter.prototype.writeString, jspb.BinaryWriter.prototype.writeString);
  }
  f = message.getAutoInjected();
  if (f) {
    writer.writeBool(
      8,
      f
    );
  }
  f = message.getRetries();
  if (f !== 0) {
    writer.writeInt64(
      9,
      f
    );
  }
  f = message.getCustomPropertiesMap(true);
  if (f && f.getLength() > 0) {
    f.serializeBinary(10, writer, jspb.BinaryWriter.prototype.writeString, jspb.BinaryWriter.prototype.writeMessage, proto.google.protobuf.Any.serializeBinaryToWriter);
  }
};


/**
 * optional string name = 1;
 * @return {string}
 */
proto.estafette.ci.manifest.v1.EstafetteStage.prototype.getName = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/** @param {string} value */
proto.estafette.ci.manifest.v1.EstafetteStage.prototype.setName = function(value) {
  jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string container_image = 2;
 * @return {string}
 */
proto.estafette.ci.manifest.v1.EstafetteStage.prototype.getContainerImage = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/** @param {string} value */
proto.estafette.ci.manifest.v1.EstafetteStage.prototype.setContainerImage = function(value) {
  jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional string shell = 3;
 * @return {string}
 */
proto.estafette.ci.manifest.v1.EstafetteStage.prototype.getShell = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/** @param {string} value */
proto.estafette.ci.manifest.v1.EstafetteStage.prototype.setShell = function(value) {
  jspb.Message.setProto3StringField(this, 3, value);
};


/**
 * optional string working_directory = 4;
 * @return {string}
 */
proto.estafette.ci.manifest.v1.EstafetteStage.prototype.getWorkingDirectory = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 4, ""));
};


/** @param {string} value */
proto.estafette.ci.manifest.v1.EstafetteStage.prototype.setWorkingDirectory = function(value) {
  jspb.Message.setProto3StringField(this, 4, value);
};


/**
 * repeated string commands = 5;
 * @return {!Array<string>}
 */
proto.estafette.ci.manifest.v1.EstafetteStage.prototype.getCommandsList = function() {
  return /** @type {!Array<string>} */ (jspb.Message.getRepeatedField(this, 5));
};


/** @param {!Array<string>} value */
proto.estafette.ci.manifest.v1.EstafetteStage.prototype.setCommandsList = function(value) {
  jspb.Message.setField(this, 5, value || []);
};


/**
 * @param {!string} value
 * @param {number=} opt_index
 */
proto.estafette.ci.manifest.v1.EstafetteStage.prototype.addCommands = function(value, opt_index) {
  jspb.Message.addToRepeatedField(this, 5, value, opt_index);
};


proto.estafette.ci.manifest.v1.EstafetteStage.prototype.clearCommandsList = function() {
  this.setCommandsList([]);
};


/**
 * optional string when = 6;
 * @return {string}
 */
proto.estafette.ci.manifest.v1.EstafetteStage.prototype.getWhen = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 6, ""));
};


/** @param {string} value */
proto.estafette.ci.manifest.v1.EstafetteStage.prototype.setWhen = function(value) {
  jspb.Message.setProto3StringField(this, 6, value);
};


/**
 * map<string, string> env_vars = 7;
 * @param {boolean=} opt_noLazyCreate Do not create the map if
 * empty, instead returning `undefined`
 * @return {!jspb.Map<string,string>}
 */
proto.estafette.ci.manifest.v1.EstafetteStage.prototype.getEnvVarsMap = function(opt_noLazyCreate) {
  return /** @type {!jspb.Map<string,string>} */ (
      jspb.Message.getMapField(this, 7, opt_noLazyCreate,
      null));
};


proto.estafette.ci.manifest.v1.EstafetteStage.prototype.clearEnvVarsMap = function() {
  this.getEnvVarsMap().clear();
};


/**
 * optional bool auto_injected = 8;
 * Note that Boolean fields may be set to 0/1 when serialized from a Java server.
 * You should avoid comparisons like {@code val === true/false} in those cases.
 * @return {boolean}
 */
proto.estafette.ci.manifest.v1.EstafetteStage.prototype.getAutoInjected = function() {
  return /** @type {boolean} */ (jspb.Message.getFieldWithDefault(this, 8, false));
};


/** @param {boolean} value */
proto.estafette.ci.manifest.v1.EstafetteStage.prototype.setAutoInjected = function(value) {
  jspb.Message.setProto3BooleanField(this, 8, value);
};


/**
 * optional int64 retries = 9;
 * @return {number}
 */
proto.estafette.ci.manifest.v1.EstafetteStage.prototype.getRetries = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 9, 0));
};


/** @param {number} value */
proto.estafette.ci.manifest.v1.EstafetteStage.prototype.setRetries = function(value) {
  jspb.Message.setProto3IntField(this, 9, value);
};


/**
 * map<string, google.protobuf.Any> custom_properties = 10;
 * @param {boolean=} opt_noLazyCreate Do not create the map if
 * empty, instead returning `undefined`
 * @return {!jspb.Map<string,!proto.google.protobuf.Any>}
 */
proto.estafette.ci.manifest.v1.EstafetteStage.prototype.getCustomPropertiesMap = function(opt_noLazyCreate) {
  return /** @type {!jspb.Map<string,!proto.google.protobuf.Any>} */ (
      jspb.Message.getMapField(this, 10, opt_noLazyCreate,
      proto.google.protobuf.Any));
};


proto.estafette.ci.manifest.v1.EstafetteStage.prototype.clearCustomPropertiesMap = function() {
  this.getCustomPropertiesMap().clear();
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.estafette.ci.manifest.v1.EstafettePipelineTrigger = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.estafette.ci.manifest.v1.EstafettePipelineTrigger, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.estafette.ci.manifest.v1.EstafettePipelineTrigger.displayName = 'proto.estafette.ci.manifest.v1.EstafettePipelineTrigger';
}


if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.estafette.ci.manifest.v1.EstafettePipelineTrigger.prototype.toObject = function(opt_includeInstance) {
  return proto.estafette.ci.manifest.v1.EstafettePipelineTrigger.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.estafette.ci.manifest.v1.EstafettePipelineTrigger} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.estafette.ci.manifest.v1.EstafettePipelineTrigger.toObject = function(includeInstance, msg) {
  var f, obj = {
    event: jspb.Message.getFieldWithDefault(msg, 1, ""),
    status: jspb.Message.getFieldWithDefault(msg, 2, ""),
    name: jspb.Message.getFieldWithDefault(msg, 3, ""),
    branch: jspb.Message.getFieldWithDefault(msg, 4, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.estafette.ci.manifest.v1.EstafettePipelineTrigger}
 */
proto.estafette.ci.manifest.v1.EstafettePipelineTrigger.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.estafette.ci.manifest.v1.EstafettePipelineTrigger;
  return proto.estafette.ci.manifest.v1.EstafettePipelineTrigger.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.estafette.ci.manifest.v1.EstafettePipelineTrigger} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.estafette.ci.manifest.v1.EstafettePipelineTrigger}
 */
proto.estafette.ci.manifest.v1.EstafettePipelineTrigger.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setEvent(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setStatus(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setName(value);
      break;
    case 4:
      var value = /** @type {string} */ (reader.readString());
      msg.setBranch(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.estafette.ci.manifest.v1.EstafettePipelineTrigger.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.estafette.ci.manifest.v1.EstafettePipelineTrigger.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.estafette.ci.manifest.v1.EstafettePipelineTrigger} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.estafette.ci.manifest.v1.EstafettePipelineTrigger.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getEvent();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getStatus();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getName();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
  f = message.getBranch();
  if (f.length > 0) {
    writer.writeString(
      4,
      f
    );
  }
};


/**
 * optional string event = 1;
 * @return {string}
 */
proto.estafette.ci.manifest.v1.EstafettePipelineTrigger.prototype.getEvent = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/** @param {string} value */
proto.estafette.ci.manifest.v1.EstafettePipelineTrigger.prototype.setEvent = function(value) {
  jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string status = 2;
 * @return {string}
 */
proto.estafette.ci.manifest.v1.EstafettePipelineTrigger.prototype.getStatus = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/** @param {string} value */
proto.estafette.ci.manifest.v1.EstafettePipelineTrigger.prototype.setStatus = function(value) {
  jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional string name = 3;
 * @return {string}
 */
proto.estafette.ci.manifest.v1.EstafettePipelineTrigger.prototype.getName = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/** @param {string} value */
proto.estafette.ci.manifest.v1.EstafettePipelineTrigger.prototype.setName = function(value) {
  jspb.Message.setProto3StringField(this, 3, value);
};


/**
 * optional string branch = 4;
 * @return {string}
 */
proto.estafette.ci.manifest.v1.EstafettePipelineTrigger.prototype.getBranch = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 4, ""));
};


/** @param {string} value */
proto.estafette.ci.manifest.v1.EstafettePipelineTrigger.prototype.setBranch = function(value) {
  jspb.Message.setProto3StringField(this, 4, value);
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.estafette.ci.manifest.v1.EstafettePubSubTrigger = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.estafette.ci.manifest.v1.EstafettePubSubTrigger, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.estafette.ci.manifest.v1.EstafettePubSubTrigger.displayName = 'proto.estafette.ci.manifest.v1.EstafettePubSubTrigger';
}


if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.estafette.ci.manifest.v1.EstafettePubSubTrigger.prototype.toObject = function(opt_includeInstance) {
  return proto.estafette.ci.manifest.v1.EstafettePubSubTrigger.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.estafette.ci.manifest.v1.EstafettePubSubTrigger} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.estafette.ci.manifest.v1.EstafettePubSubTrigger.toObject = function(includeInstance, msg) {
  var f, obj = {
    project: jspb.Message.getFieldWithDefault(msg, 1, ""),
    topic: jspb.Message.getFieldWithDefault(msg, 2, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.estafette.ci.manifest.v1.EstafettePubSubTrigger}
 */
proto.estafette.ci.manifest.v1.EstafettePubSubTrigger.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.estafette.ci.manifest.v1.EstafettePubSubTrigger;
  return proto.estafette.ci.manifest.v1.EstafettePubSubTrigger.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.estafette.ci.manifest.v1.EstafettePubSubTrigger} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.estafette.ci.manifest.v1.EstafettePubSubTrigger}
 */
proto.estafette.ci.manifest.v1.EstafettePubSubTrigger.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setProject(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setTopic(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.estafette.ci.manifest.v1.EstafettePubSubTrigger.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.estafette.ci.manifest.v1.EstafettePubSubTrigger.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.estafette.ci.manifest.v1.EstafettePubSubTrigger} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.estafette.ci.manifest.v1.EstafettePubSubTrigger.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getProject();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getTopic();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
};


/**
 * optional string project = 1;
 * @return {string}
 */
proto.estafette.ci.manifest.v1.EstafettePubSubTrigger.prototype.getProject = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/** @param {string} value */
proto.estafette.ci.manifest.v1.EstafettePubSubTrigger.prototype.setProject = function(value) {
  jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string topic = 2;
 * @return {string}
 */
proto.estafette.ci.manifest.v1.EstafettePubSubTrigger.prototype.getTopic = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/** @param {string} value */
proto.estafette.ci.manifest.v1.EstafettePubSubTrigger.prototype.setTopic = function(value) {
  jspb.Message.setProto3StringField(this, 2, value);
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.estafette.ci.manifest.v1.EstafetteReleaseTrigger = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.estafette.ci.manifest.v1.EstafetteReleaseTrigger, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.estafette.ci.manifest.v1.EstafetteReleaseTrigger.displayName = 'proto.estafette.ci.manifest.v1.EstafetteReleaseTrigger';
}


if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.estafette.ci.manifest.v1.EstafetteReleaseTrigger.prototype.toObject = function(opt_includeInstance) {
  return proto.estafette.ci.manifest.v1.EstafetteReleaseTrigger.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.estafette.ci.manifest.v1.EstafetteReleaseTrigger} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.estafette.ci.manifest.v1.EstafetteReleaseTrigger.toObject = function(includeInstance, msg) {
  var f, obj = {
    event: jspb.Message.getFieldWithDefault(msg, 1, ""),
    status: jspb.Message.getFieldWithDefault(msg, 2, ""),
    name: jspb.Message.getFieldWithDefault(msg, 3, ""),
    target: jspb.Message.getFieldWithDefault(msg, 4, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.estafette.ci.manifest.v1.EstafetteReleaseTrigger}
 */
proto.estafette.ci.manifest.v1.EstafetteReleaseTrigger.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.estafette.ci.manifest.v1.EstafetteReleaseTrigger;
  return proto.estafette.ci.manifest.v1.EstafetteReleaseTrigger.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.estafette.ci.manifest.v1.EstafetteReleaseTrigger} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.estafette.ci.manifest.v1.EstafetteReleaseTrigger}
 */
proto.estafette.ci.manifest.v1.EstafetteReleaseTrigger.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setEvent(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setStatus(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setName(value);
      break;
    case 4:
      var value = /** @type {string} */ (reader.readString());
      msg.setTarget(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.estafette.ci.manifest.v1.EstafetteReleaseTrigger.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.estafette.ci.manifest.v1.EstafetteReleaseTrigger.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.estafette.ci.manifest.v1.EstafetteReleaseTrigger} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.estafette.ci.manifest.v1.EstafetteReleaseTrigger.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getEvent();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getStatus();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getName();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
  f = message.getTarget();
  if (f.length > 0) {
    writer.writeString(
      4,
      f
    );
  }
};


/**
 * optional string event = 1;
 * @return {string}
 */
proto.estafette.ci.manifest.v1.EstafetteReleaseTrigger.prototype.getEvent = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/** @param {string} value */
proto.estafette.ci.manifest.v1.EstafetteReleaseTrigger.prototype.setEvent = function(value) {
  jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string status = 2;
 * @return {string}
 */
proto.estafette.ci.manifest.v1.EstafetteReleaseTrigger.prototype.getStatus = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/** @param {string} value */
proto.estafette.ci.manifest.v1.EstafetteReleaseTrigger.prototype.setStatus = function(value) {
  jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional string name = 3;
 * @return {string}
 */
proto.estafette.ci.manifest.v1.EstafetteReleaseTrigger.prototype.getName = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/** @param {string} value */
proto.estafette.ci.manifest.v1.EstafetteReleaseTrigger.prototype.setName = function(value) {
  jspb.Message.setProto3StringField(this, 3, value);
};


/**
 * optional string target = 4;
 * @return {string}
 */
proto.estafette.ci.manifest.v1.EstafetteReleaseTrigger.prototype.getTarget = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 4, ""));
};


/** @param {string} value */
proto.estafette.ci.manifest.v1.EstafetteReleaseTrigger.prototype.setTarget = function(value) {
  jspb.Message.setProto3StringField(this, 4, value);
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.estafette.ci.manifest.v1.EstafetteTriggerBuildAction = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.estafette.ci.manifest.v1.EstafetteTriggerBuildAction, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.estafette.ci.manifest.v1.EstafetteTriggerBuildAction.displayName = 'proto.estafette.ci.manifest.v1.EstafetteTriggerBuildAction';
}


if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.estafette.ci.manifest.v1.EstafetteTriggerBuildAction.prototype.toObject = function(opt_includeInstance) {
  return proto.estafette.ci.manifest.v1.EstafetteTriggerBuildAction.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.estafette.ci.manifest.v1.EstafetteTriggerBuildAction} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.estafette.ci.manifest.v1.EstafetteTriggerBuildAction.toObject = function(includeInstance, msg) {
  var f, obj = {
    branch: jspb.Message.getFieldWithDefault(msg, 1, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.estafette.ci.manifest.v1.EstafetteTriggerBuildAction}
 */
proto.estafette.ci.manifest.v1.EstafetteTriggerBuildAction.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.estafette.ci.manifest.v1.EstafetteTriggerBuildAction;
  return proto.estafette.ci.manifest.v1.EstafetteTriggerBuildAction.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.estafette.ci.manifest.v1.EstafetteTriggerBuildAction} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.estafette.ci.manifest.v1.EstafetteTriggerBuildAction}
 */
proto.estafette.ci.manifest.v1.EstafetteTriggerBuildAction.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setBranch(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.estafette.ci.manifest.v1.EstafetteTriggerBuildAction.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.estafette.ci.manifest.v1.EstafetteTriggerBuildAction.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.estafette.ci.manifest.v1.EstafetteTriggerBuildAction} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.estafette.ci.manifest.v1.EstafetteTriggerBuildAction.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getBranch();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
};


/**
 * optional string branch = 1;
 * @return {string}
 */
proto.estafette.ci.manifest.v1.EstafetteTriggerBuildAction.prototype.getBranch = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/** @param {string} value */
proto.estafette.ci.manifest.v1.EstafetteTriggerBuildAction.prototype.setBranch = function(value) {
  jspb.Message.setProto3StringField(this, 1, value);
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.estafette.ci.manifest.v1.EstafetteTriggerReleaseAction = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.estafette.ci.manifest.v1.EstafetteTriggerReleaseAction, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.estafette.ci.manifest.v1.EstafetteTriggerReleaseAction.displayName = 'proto.estafette.ci.manifest.v1.EstafetteTriggerReleaseAction';
}


if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.estafette.ci.manifest.v1.EstafetteTriggerReleaseAction.prototype.toObject = function(opt_includeInstance) {
  return proto.estafette.ci.manifest.v1.EstafetteTriggerReleaseAction.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.estafette.ci.manifest.v1.EstafetteTriggerReleaseAction} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.estafette.ci.manifest.v1.EstafetteTriggerReleaseAction.toObject = function(includeInstance, msg) {
  var f, obj = {
    target: jspb.Message.getFieldWithDefault(msg, 1, ""),
    action: jspb.Message.getFieldWithDefault(msg, 2, ""),
    version: jspb.Message.getFieldWithDefault(msg, 3, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.estafette.ci.manifest.v1.EstafetteTriggerReleaseAction}
 */
proto.estafette.ci.manifest.v1.EstafetteTriggerReleaseAction.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.estafette.ci.manifest.v1.EstafetteTriggerReleaseAction;
  return proto.estafette.ci.manifest.v1.EstafetteTriggerReleaseAction.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.estafette.ci.manifest.v1.EstafetteTriggerReleaseAction} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.estafette.ci.manifest.v1.EstafetteTriggerReleaseAction}
 */
proto.estafette.ci.manifest.v1.EstafetteTriggerReleaseAction.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setTarget(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setAction(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setVersion(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.estafette.ci.manifest.v1.EstafetteTriggerReleaseAction.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.estafette.ci.manifest.v1.EstafetteTriggerReleaseAction.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.estafette.ci.manifest.v1.EstafetteTriggerReleaseAction} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.estafette.ci.manifest.v1.EstafetteTriggerReleaseAction.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getTarget();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getAction();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getVersion();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
};


/**
 * optional string target = 1;
 * @return {string}
 */
proto.estafette.ci.manifest.v1.EstafetteTriggerReleaseAction.prototype.getTarget = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/** @param {string} value */
proto.estafette.ci.manifest.v1.EstafetteTriggerReleaseAction.prototype.setTarget = function(value) {
  jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string action = 2;
 * @return {string}
 */
proto.estafette.ci.manifest.v1.EstafetteTriggerReleaseAction.prototype.getAction = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/** @param {string} value */
proto.estafette.ci.manifest.v1.EstafetteTriggerReleaseAction.prototype.setAction = function(value) {
  jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional string version = 3;
 * @return {string}
 */
proto.estafette.ci.manifest.v1.EstafetteTriggerReleaseAction.prototype.getVersion = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/** @param {string} value */
proto.estafette.ci.manifest.v1.EstafetteTriggerReleaseAction.prototype.setVersion = function(value) {
  jspb.Message.setProto3StringField(this, 3, value);
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.estafette.ci.manifest.v1.EstafetteTrigger = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.estafette.ci.manifest.v1.EstafetteTrigger, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.estafette.ci.manifest.v1.EstafetteTrigger.displayName = 'proto.estafette.ci.manifest.v1.EstafetteTrigger';
}


if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.estafette.ci.manifest.v1.EstafetteTrigger.prototype.toObject = function(opt_includeInstance) {
  return proto.estafette.ci.manifest.v1.EstafetteTrigger.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.estafette.ci.manifest.v1.EstafetteTrigger} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.estafette.ci.manifest.v1.EstafetteTrigger.toObject = function(includeInstance, msg) {
  var f, obj = {
    pipeline: (f = msg.getPipeline()) && proto.estafette.ci.manifest.v1.EstafettePipelineTrigger.toObject(includeInstance, f),
    release: (f = msg.getRelease()) && proto.estafette.ci.manifest.v1.EstafetteReleaseTrigger.toObject(includeInstance, f),
    git: (f = msg.getGit()) && proto.estafette.ci.manifest.v1.EstafetteGitTrigger.toObject(includeInstance, f),
    docker: (f = msg.getDocker()) && proto.estafette.ci.manifest.v1.EstafetteDockerTrigger.toObject(includeInstance, f),
    cron: (f = msg.getCron()) && proto.estafette.ci.manifest.v1.EstafetteCronTrigger.toObject(includeInstance, f),
    pubSub: (f = msg.getPubSub()) && proto.estafette.ci.manifest.v1.EstafettePubSubTrigger.toObject(includeInstance, f),
    buildAction: (f = msg.getBuildAction()) && proto.estafette.ci.manifest.v1.EstafetteTriggerBuildAction.toObject(includeInstance, f),
    releaseAction: (f = msg.getReleaseAction()) && proto.estafette.ci.manifest.v1.EstafetteTriggerReleaseAction.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.estafette.ci.manifest.v1.EstafetteTrigger}
 */
proto.estafette.ci.manifest.v1.EstafetteTrigger.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.estafette.ci.manifest.v1.EstafetteTrigger;
  return proto.estafette.ci.manifest.v1.EstafetteTrigger.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.estafette.ci.manifest.v1.EstafetteTrigger} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.estafette.ci.manifest.v1.EstafetteTrigger}
 */
proto.estafette.ci.manifest.v1.EstafetteTrigger.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.estafette.ci.manifest.v1.EstafettePipelineTrigger;
      reader.readMessage(value,proto.estafette.ci.manifest.v1.EstafettePipelineTrigger.deserializeBinaryFromReader);
      msg.setPipeline(value);
      break;
    case 2:
      var value = new proto.estafette.ci.manifest.v1.EstafetteReleaseTrigger;
      reader.readMessage(value,proto.estafette.ci.manifest.v1.EstafetteReleaseTrigger.deserializeBinaryFromReader);
      msg.setRelease(value);
      break;
    case 3:
      var value = new proto.estafette.ci.manifest.v1.EstafetteGitTrigger;
      reader.readMessage(value,proto.estafette.ci.manifest.v1.EstafetteGitTrigger.deserializeBinaryFromReader);
      msg.setGit(value);
      break;
    case 4:
      var value = new proto.estafette.ci.manifest.v1.EstafetteDockerTrigger;
      reader.readMessage(value,proto.estafette.ci.manifest.v1.EstafetteDockerTrigger.deserializeBinaryFromReader);
      msg.setDocker(value);
      break;
    case 5:
      var value = new proto.estafette.ci.manifest.v1.EstafetteCronTrigger;
      reader.readMessage(value,proto.estafette.ci.manifest.v1.EstafetteCronTrigger.deserializeBinaryFromReader);
      msg.setCron(value);
      break;
    case 6:
      var value = new proto.estafette.ci.manifest.v1.EstafettePubSubTrigger;
      reader.readMessage(value,proto.estafette.ci.manifest.v1.EstafettePubSubTrigger.deserializeBinaryFromReader);
      msg.setPubSub(value);
      break;
    case 7:
      var value = new proto.estafette.ci.manifest.v1.EstafetteTriggerBuildAction;
      reader.readMessage(value,proto.estafette.ci.manifest.v1.EstafetteTriggerBuildAction.deserializeBinaryFromReader);
      msg.setBuildAction(value);
      break;
    case 8:
      var value = new proto.estafette.ci.manifest.v1.EstafetteTriggerReleaseAction;
      reader.readMessage(value,proto.estafette.ci.manifest.v1.EstafetteTriggerReleaseAction.deserializeBinaryFromReader);
      msg.setReleaseAction(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.estafette.ci.manifest.v1.EstafetteTrigger.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.estafette.ci.manifest.v1.EstafetteTrigger.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.estafette.ci.manifest.v1.EstafetteTrigger} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.estafette.ci.manifest.v1.EstafetteTrigger.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getPipeline();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      proto.estafette.ci.manifest.v1.EstafettePipelineTrigger.serializeBinaryToWriter
    );
  }
  f = message.getRelease();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      proto.estafette.ci.manifest.v1.EstafetteReleaseTrigger.serializeBinaryToWriter
    );
  }
  f = message.getGit();
  if (f != null) {
    writer.writeMessage(
      3,
      f,
      proto.estafette.ci.manifest.v1.EstafetteGitTrigger.serializeBinaryToWriter
    );
  }
  f = message.getDocker();
  if (f != null) {
    writer.writeMessage(
      4,
      f,
      proto.estafette.ci.manifest.v1.EstafetteDockerTrigger.serializeBinaryToWriter
    );
  }
  f = message.getCron();
  if (f != null) {
    writer.writeMessage(
      5,
      f,
      proto.estafette.ci.manifest.v1.EstafetteCronTrigger.serializeBinaryToWriter
    );
  }
  f = message.getPubSub();
  if (f != null) {
    writer.writeMessage(
      6,
      f,
      proto.estafette.ci.manifest.v1.EstafettePubSubTrigger.serializeBinaryToWriter
    );
  }
  f = message.getBuildAction();
  if (f != null) {
    writer.writeMessage(
      7,
      f,
      proto.estafette.ci.manifest.v1.EstafetteTriggerBuildAction.serializeBinaryToWriter
    );
  }
  f = message.getReleaseAction();
  if (f != null) {
    writer.writeMessage(
      8,
      f,
      proto.estafette.ci.manifest.v1.EstafetteTriggerReleaseAction.serializeBinaryToWriter
    );
  }
};


/**
 * optional EstafettePipelineTrigger pipeline = 1;
 * @return {?proto.estafette.ci.manifest.v1.EstafettePipelineTrigger}
 */
proto.estafette.ci.manifest.v1.EstafetteTrigger.prototype.getPipeline = function() {
  return /** @type{?proto.estafette.ci.manifest.v1.EstafettePipelineTrigger} */ (
    jspb.Message.getWrapperField(this, proto.estafette.ci.manifest.v1.EstafettePipelineTrigger, 1));
};


/** @param {?proto.estafette.ci.manifest.v1.EstafettePipelineTrigger|undefined} value */
proto.estafette.ci.manifest.v1.EstafetteTrigger.prototype.setPipeline = function(value) {
  jspb.Message.setWrapperField(this, 1, value);
};


proto.estafette.ci.manifest.v1.EstafetteTrigger.prototype.clearPipeline = function() {
  this.setPipeline(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.estafette.ci.manifest.v1.EstafetteTrigger.prototype.hasPipeline = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional EstafetteReleaseTrigger release = 2;
 * @return {?proto.estafette.ci.manifest.v1.EstafetteReleaseTrigger}
 */
proto.estafette.ci.manifest.v1.EstafetteTrigger.prototype.getRelease = function() {
  return /** @type{?proto.estafette.ci.manifest.v1.EstafetteReleaseTrigger} */ (
    jspb.Message.getWrapperField(this, proto.estafette.ci.manifest.v1.EstafetteReleaseTrigger, 2));
};


/** @param {?proto.estafette.ci.manifest.v1.EstafetteReleaseTrigger|undefined} value */
proto.estafette.ci.manifest.v1.EstafetteTrigger.prototype.setRelease = function(value) {
  jspb.Message.setWrapperField(this, 2, value);
};


proto.estafette.ci.manifest.v1.EstafetteTrigger.prototype.clearRelease = function() {
  this.setRelease(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.estafette.ci.manifest.v1.EstafetteTrigger.prototype.hasRelease = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * optional EstafetteGitTrigger git = 3;
 * @return {?proto.estafette.ci.manifest.v1.EstafetteGitTrigger}
 */
proto.estafette.ci.manifest.v1.EstafetteTrigger.prototype.getGit = function() {
  return /** @type{?proto.estafette.ci.manifest.v1.EstafetteGitTrigger} */ (
    jspb.Message.getWrapperField(this, proto.estafette.ci.manifest.v1.EstafetteGitTrigger, 3));
};


/** @param {?proto.estafette.ci.manifest.v1.EstafetteGitTrigger|undefined} value */
proto.estafette.ci.manifest.v1.EstafetteTrigger.prototype.setGit = function(value) {
  jspb.Message.setWrapperField(this, 3, value);
};


proto.estafette.ci.manifest.v1.EstafetteTrigger.prototype.clearGit = function() {
  this.setGit(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.estafette.ci.manifest.v1.EstafetteTrigger.prototype.hasGit = function() {
  return jspb.Message.getField(this, 3) != null;
};


/**
 * optional EstafetteDockerTrigger docker = 4;
 * @return {?proto.estafette.ci.manifest.v1.EstafetteDockerTrigger}
 */
proto.estafette.ci.manifest.v1.EstafetteTrigger.prototype.getDocker = function() {
  return /** @type{?proto.estafette.ci.manifest.v1.EstafetteDockerTrigger} */ (
    jspb.Message.getWrapperField(this, proto.estafette.ci.manifest.v1.EstafetteDockerTrigger, 4));
};


/** @param {?proto.estafette.ci.manifest.v1.EstafetteDockerTrigger|undefined} value */
proto.estafette.ci.manifest.v1.EstafetteTrigger.prototype.setDocker = function(value) {
  jspb.Message.setWrapperField(this, 4, value);
};


proto.estafette.ci.manifest.v1.EstafetteTrigger.prototype.clearDocker = function() {
  this.setDocker(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.estafette.ci.manifest.v1.EstafetteTrigger.prototype.hasDocker = function() {
  return jspb.Message.getField(this, 4) != null;
};


/**
 * optional EstafetteCronTrigger cron = 5;
 * @return {?proto.estafette.ci.manifest.v1.EstafetteCronTrigger}
 */
proto.estafette.ci.manifest.v1.EstafetteTrigger.prototype.getCron = function() {
  return /** @type{?proto.estafette.ci.manifest.v1.EstafetteCronTrigger} */ (
    jspb.Message.getWrapperField(this, proto.estafette.ci.manifest.v1.EstafetteCronTrigger, 5));
};


/** @param {?proto.estafette.ci.manifest.v1.EstafetteCronTrigger|undefined} value */
proto.estafette.ci.manifest.v1.EstafetteTrigger.prototype.setCron = function(value) {
  jspb.Message.setWrapperField(this, 5, value);
};


proto.estafette.ci.manifest.v1.EstafetteTrigger.prototype.clearCron = function() {
  this.setCron(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.estafette.ci.manifest.v1.EstafetteTrigger.prototype.hasCron = function() {
  return jspb.Message.getField(this, 5) != null;
};


/**
 * optional EstafettePubSubTrigger pub_sub = 6;
 * @return {?proto.estafette.ci.manifest.v1.EstafettePubSubTrigger}
 */
proto.estafette.ci.manifest.v1.EstafetteTrigger.prototype.getPubSub = function() {
  return /** @type{?proto.estafette.ci.manifest.v1.EstafettePubSubTrigger} */ (
    jspb.Message.getWrapperField(this, proto.estafette.ci.manifest.v1.EstafettePubSubTrigger, 6));
};


/** @param {?proto.estafette.ci.manifest.v1.EstafettePubSubTrigger|undefined} value */
proto.estafette.ci.manifest.v1.EstafetteTrigger.prototype.setPubSub = function(value) {
  jspb.Message.setWrapperField(this, 6, value);
};


proto.estafette.ci.manifest.v1.EstafetteTrigger.prototype.clearPubSub = function() {
  this.setPubSub(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.estafette.ci.manifest.v1.EstafetteTrigger.prototype.hasPubSub = function() {
  return jspb.Message.getField(this, 6) != null;
};


/**
 * optional EstafetteTriggerBuildAction build_action = 7;
 * @return {?proto.estafette.ci.manifest.v1.EstafetteTriggerBuildAction}
 */
proto.estafette.ci.manifest.v1.EstafetteTrigger.prototype.getBuildAction = function() {
  return /** @type{?proto.estafette.ci.manifest.v1.EstafetteTriggerBuildAction} */ (
    jspb.Message.getWrapperField(this, proto.estafette.ci.manifest.v1.EstafetteTriggerBuildAction, 7));
};


/** @param {?proto.estafette.ci.manifest.v1.EstafetteTriggerBuildAction|undefined} value */
proto.estafette.ci.manifest.v1.EstafetteTrigger.prototype.setBuildAction = function(value) {
  jspb.Message.setWrapperField(this, 7, value);
};


proto.estafette.ci.manifest.v1.EstafetteTrigger.prototype.clearBuildAction = function() {
  this.setBuildAction(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.estafette.ci.manifest.v1.EstafetteTrigger.prototype.hasBuildAction = function() {
  return jspb.Message.getField(this, 7) != null;
};


/**
 * optional EstafetteTriggerReleaseAction release_action = 8;
 * @return {?proto.estafette.ci.manifest.v1.EstafetteTriggerReleaseAction}
 */
proto.estafette.ci.manifest.v1.EstafetteTrigger.prototype.getReleaseAction = function() {
  return /** @type{?proto.estafette.ci.manifest.v1.EstafetteTriggerReleaseAction} */ (
    jspb.Message.getWrapperField(this, proto.estafette.ci.manifest.v1.EstafetteTriggerReleaseAction, 8));
};


/** @param {?proto.estafette.ci.manifest.v1.EstafetteTriggerReleaseAction|undefined} value */
proto.estafette.ci.manifest.v1.EstafetteTrigger.prototype.setReleaseAction = function(value) {
  jspb.Message.setWrapperField(this, 8, value);
};


proto.estafette.ci.manifest.v1.EstafetteTrigger.prototype.clearReleaseAction = function() {
  this.setReleaseAction(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.estafette.ci.manifest.v1.EstafetteTrigger.prototype.hasReleaseAction = function() {
  return jspb.Message.getField(this, 8) != null;
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.estafette.ci.manifest.v1.EstafetteRelease = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.estafette.ci.manifest.v1.EstafetteRelease.repeatedFields_, null);
};
goog.inherits(proto.estafette.ci.manifest.v1.EstafetteRelease, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.estafette.ci.manifest.v1.EstafetteRelease.displayName = 'proto.estafette.ci.manifest.v1.EstafetteRelease';
}
/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.estafette.ci.manifest.v1.EstafetteRelease.repeatedFields_ = [3,4,5];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.estafette.ci.manifest.v1.EstafetteRelease.prototype.toObject = function(opt_includeInstance) {
  return proto.estafette.ci.manifest.v1.EstafetteRelease.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.estafette.ci.manifest.v1.EstafetteRelease} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.estafette.ci.manifest.v1.EstafetteRelease.toObject = function(includeInstance, msg) {
  var f, obj = {
    name: jspb.Message.getFieldWithDefault(msg, 1, ""),
    cloneRepository: jspb.Message.getFieldWithDefault(msg, 2, false),
    actionsList: jspb.Message.toObjectList(msg.getActionsList(),
    proto.estafette.ci.manifest.v1.EstafetteReleaseAction.toObject, includeInstance),
    triggersList: jspb.Message.toObjectList(msg.getTriggersList(),
    proto.estafette.ci.manifest.v1.EstafetteTrigger.toObject, includeInstance),
    stagesList: jspb.Message.toObjectList(msg.getStagesList(),
    proto.estafette.ci.manifest.v1.EstafetteStage.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.estafette.ci.manifest.v1.EstafetteRelease}
 */
proto.estafette.ci.manifest.v1.EstafetteRelease.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.estafette.ci.manifest.v1.EstafetteRelease;
  return proto.estafette.ci.manifest.v1.EstafetteRelease.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.estafette.ci.manifest.v1.EstafetteRelease} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.estafette.ci.manifest.v1.EstafetteRelease}
 */
proto.estafette.ci.manifest.v1.EstafetteRelease.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setName(value);
      break;
    case 2:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setCloneRepository(value);
      break;
    case 3:
      var value = new proto.estafette.ci.manifest.v1.EstafetteReleaseAction;
      reader.readMessage(value,proto.estafette.ci.manifest.v1.EstafetteReleaseAction.deserializeBinaryFromReader);
      msg.addActions(value);
      break;
    case 4:
      var value = new proto.estafette.ci.manifest.v1.EstafetteTrigger;
      reader.readMessage(value,proto.estafette.ci.manifest.v1.EstafetteTrigger.deserializeBinaryFromReader);
      msg.addTriggers(value);
      break;
    case 5:
      var value = new proto.estafette.ci.manifest.v1.EstafetteStage;
      reader.readMessage(value,proto.estafette.ci.manifest.v1.EstafetteStage.deserializeBinaryFromReader);
      msg.addStages(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.estafette.ci.manifest.v1.EstafetteRelease.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.estafette.ci.manifest.v1.EstafetteRelease.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.estafette.ci.manifest.v1.EstafetteRelease} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.estafette.ci.manifest.v1.EstafetteRelease.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getName();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getCloneRepository();
  if (f) {
    writer.writeBool(
      2,
      f
    );
  }
  f = message.getActionsList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      3,
      f,
      proto.estafette.ci.manifest.v1.EstafetteReleaseAction.serializeBinaryToWriter
    );
  }
  f = message.getTriggersList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      4,
      f,
      proto.estafette.ci.manifest.v1.EstafetteTrigger.serializeBinaryToWriter
    );
  }
  f = message.getStagesList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      5,
      f,
      proto.estafette.ci.manifest.v1.EstafetteStage.serializeBinaryToWriter
    );
  }
};


/**
 * optional string name = 1;
 * @return {string}
 */
proto.estafette.ci.manifest.v1.EstafetteRelease.prototype.getName = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/** @param {string} value */
proto.estafette.ci.manifest.v1.EstafetteRelease.prototype.setName = function(value) {
  jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional bool clone_repository = 2;
 * Note that Boolean fields may be set to 0/1 when serialized from a Java server.
 * You should avoid comparisons like {@code val === true/false} in those cases.
 * @return {boolean}
 */
proto.estafette.ci.manifest.v1.EstafetteRelease.prototype.getCloneRepository = function() {
  return /** @type {boolean} */ (jspb.Message.getFieldWithDefault(this, 2, false));
};


/** @param {boolean} value */
proto.estafette.ci.manifest.v1.EstafetteRelease.prototype.setCloneRepository = function(value) {
  jspb.Message.setProto3BooleanField(this, 2, value);
};


/**
 * repeated EstafetteReleaseAction actions = 3;
 * @return {!Array<!proto.estafette.ci.manifest.v1.EstafetteReleaseAction>}
 */
proto.estafette.ci.manifest.v1.EstafetteRelease.prototype.getActionsList = function() {
  return /** @type{!Array<!proto.estafette.ci.manifest.v1.EstafetteReleaseAction>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.estafette.ci.manifest.v1.EstafetteReleaseAction, 3));
};


/** @param {!Array<!proto.estafette.ci.manifest.v1.EstafetteReleaseAction>} value */
proto.estafette.ci.manifest.v1.EstafetteRelease.prototype.setActionsList = function(value) {
  jspb.Message.setRepeatedWrapperField(this, 3, value);
};


/**
 * @param {!proto.estafette.ci.manifest.v1.EstafetteReleaseAction=} opt_value
 * @param {number=} opt_index
 * @return {!proto.estafette.ci.manifest.v1.EstafetteReleaseAction}
 */
proto.estafette.ci.manifest.v1.EstafetteRelease.prototype.addActions = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 3, opt_value, proto.estafette.ci.manifest.v1.EstafetteReleaseAction, opt_index);
};


proto.estafette.ci.manifest.v1.EstafetteRelease.prototype.clearActionsList = function() {
  this.setActionsList([]);
};


/**
 * repeated EstafetteTrigger triggers = 4;
 * @return {!Array<!proto.estafette.ci.manifest.v1.EstafetteTrigger>}
 */
proto.estafette.ci.manifest.v1.EstafetteRelease.prototype.getTriggersList = function() {
  return /** @type{!Array<!proto.estafette.ci.manifest.v1.EstafetteTrigger>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.estafette.ci.manifest.v1.EstafetteTrigger, 4));
};


/** @param {!Array<!proto.estafette.ci.manifest.v1.EstafetteTrigger>} value */
proto.estafette.ci.manifest.v1.EstafetteRelease.prototype.setTriggersList = function(value) {
  jspb.Message.setRepeatedWrapperField(this, 4, value);
};


/**
 * @param {!proto.estafette.ci.manifest.v1.EstafetteTrigger=} opt_value
 * @param {number=} opt_index
 * @return {!proto.estafette.ci.manifest.v1.EstafetteTrigger}
 */
proto.estafette.ci.manifest.v1.EstafetteRelease.prototype.addTriggers = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 4, opt_value, proto.estafette.ci.manifest.v1.EstafetteTrigger, opt_index);
};


proto.estafette.ci.manifest.v1.EstafetteRelease.prototype.clearTriggersList = function() {
  this.setTriggersList([]);
};


/**
 * repeated EstafetteStage stages = 5;
 * @return {!Array<!proto.estafette.ci.manifest.v1.EstafetteStage>}
 */
proto.estafette.ci.manifest.v1.EstafetteRelease.prototype.getStagesList = function() {
  return /** @type{!Array<!proto.estafette.ci.manifest.v1.EstafetteStage>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.estafette.ci.manifest.v1.EstafetteStage, 5));
};


/** @param {!Array<!proto.estafette.ci.manifest.v1.EstafetteStage>} value */
proto.estafette.ci.manifest.v1.EstafetteRelease.prototype.setStagesList = function(value) {
  jspb.Message.setRepeatedWrapperField(this, 5, value);
};


/**
 * @param {!proto.estafette.ci.manifest.v1.EstafetteStage=} opt_value
 * @param {number=} opt_index
 * @return {!proto.estafette.ci.manifest.v1.EstafetteStage}
 */
proto.estafette.ci.manifest.v1.EstafetteRelease.prototype.addStages = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 5, opt_value, proto.estafette.ci.manifest.v1.EstafetteStage, opt_index);
};


proto.estafette.ci.manifest.v1.EstafetteRelease.prototype.clearStagesList = function() {
  this.setStagesList([]);
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.estafette.ci.manifest.v1.StringOrStringArray = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.estafette.ci.manifest.v1.StringOrStringArray.repeatedFields_, null);
};
goog.inherits(proto.estafette.ci.manifest.v1.StringOrStringArray, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.estafette.ci.manifest.v1.StringOrStringArray.displayName = 'proto.estafette.ci.manifest.v1.StringOrStringArray';
}
/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.estafette.ci.manifest.v1.StringOrStringArray.repeatedFields_ = [1];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.estafette.ci.manifest.v1.StringOrStringArray.prototype.toObject = function(opt_includeInstance) {
  return proto.estafette.ci.manifest.v1.StringOrStringArray.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.estafette.ci.manifest.v1.StringOrStringArray} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.estafette.ci.manifest.v1.StringOrStringArray.toObject = function(includeInstance, msg) {
  var f, obj = {
    valuesList: jspb.Message.getRepeatedField(msg, 1)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.estafette.ci.manifest.v1.StringOrStringArray}
 */
proto.estafette.ci.manifest.v1.StringOrStringArray.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.estafette.ci.manifest.v1.StringOrStringArray;
  return proto.estafette.ci.manifest.v1.StringOrStringArray.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.estafette.ci.manifest.v1.StringOrStringArray} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.estafette.ci.manifest.v1.StringOrStringArray}
 */
proto.estafette.ci.manifest.v1.StringOrStringArray.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.addValues(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.estafette.ci.manifest.v1.StringOrStringArray.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.estafette.ci.manifest.v1.StringOrStringArray.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.estafette.ci.manifest.v1.StringOrStringArray} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.estafette.ci.manifest.v1.StringOrStringArray.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getValuesList();
  if (f.length > 0) {
    writer.writeRepeatedString(
      1,
      f
    );
  }
};


/**
 * repeated string values = 1;
 * @return {!Array<string>}
 */
proto.estafette.ci.manifest.v1.StringOrStringArray.prototype.getValuesList = function() {
  return /** @type {!Array<string>} */ (jspb.Message.getRepeatedField(this, 1));
};


/** @param {!Array<string>} value */
proto.estafette.ci.manifest.v1.StringOrStringArray.prototype.setValuesList = function(value) {
  jspb.Message.setField(this, 1, value || []);
};


/**
 * @param {!string} value
 * @param {number=} opt_index
 */
proto.estafette.ci.manifest.v1.StringOrStringArray.prototype.addValues = function(value, opt_index) {
  jspb.Message.addToRepeatedField(this, 1, value, opt_index);
};


proto.estafette.ci.manifest.v1.StringOrStringArray.prototype.clearValuesList = function() {
  this.setValuesList([]);
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.estafette.ci.manifest.v1.EstafetteSemverVersion = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.estafette.ci.manifest.v1.EstafetteSemverVersion, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.estafette.ci.manifest.v1.EstafetteSemverVersion.displayName = 'proto.estafette.ci.manifest.v1.EstafetteSemverVersion';
}


if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.estafette.ci.manifest.v1.EstafetteSemverVersion.prototype.toObject = function(opt_includeInstance) {
  return proto.estafette.ci.manifest.v1.EstafetteSemverVersion.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.estafette.ci.manifest.v1.EstafetteSemverVersion} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.estafette.ci.manifest.v1.EstafetteSemverVersion.toObject = function(includeInstance, msg) {
  var f, obj = {
    major: jspb.Message.getFieldWithDefault(msg, 1, 0),
    minor: jspb.Message.getFieldWithDefault(msg, 2, 0),
    patch: jspb.Message.getFieldWithDefault(msg, 3, ""),
    labelTemplate: jspb.Message.getFieldWithDefault(msg, 4, ""),
    releaseBranch: (f = msg.getReleaseBranch()) && proto.estafette.ci.manifest.v1.StringOrStringArray.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.estafette.ci.manifest.v1.EstafetteSemverVersion}
 */
proto.estafette.ci.manifest.v1.EstafetteSemverVersion.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.estafette.ci.manifest.v1.EstafetteSemverVersion;
  return proto.estafette.ci.manifest.v1.EstafetteSemverVersion.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.estafette.ci.manifest.v1.EstafetteSemverVersion} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.estafette.ci.manifest.v1.EstafetteSemverVersion}
 */
proto.estafette.ci.manifest.v1.EstafetteSemverVersion.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setMajor(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setMinor(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setPatch(value);
      break;
    case 4:
      var value = /** @type {string} */ (reader.readString());
      msg.setLabelTemplate(value);
      break;
    case 5:
      var value = new proto.estafette.ci.manifest.v1.StringOrStringArray;
      reader.readMessage(value,proto.estafette.ci.manifest.v1.StringOrStringArray.deserializeBinaryFromReader);
      msg.setReleaseBranch(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.estafette.ci.manifest.v1.EstafetteSemverVersion.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.estafette.ci.manifest.v1.EstafetteSemverVersion.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.estafette.ci.manifest.v1.EstafetteSemverVersion} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.estafette.ci.manifest.v1.EstafetteSemverVersion.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getMajor();
  if (f !== 0) {
    writer.writeInt64(
      1,
      f
    );
  }
  f = message.getMinor();
  if (f !== 0) {
    writer.writeInt64(
      2,
      f
    );
  }
  f = message.getPatch();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
  f = message.getLabelTemplate();
  if (f.length > 0) {
    writer.writeString(
      4,
      f
    );
  }
  f = message.getReleaseBranch();
  if (f != null) {
    writer.writeMessage(
      5,
      f,
      proto.estafette.ci.manifest.v1.StringOrStringArray.serializeBinaryToWriter
    );
  }
};


/**
 * optional int64 major = 1;
 * @return {number}
 */
proto.estafette.ci.manifest.v1.EstafetteSemverVersion.prototype.getMajor = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/** @param {number} value */
proto.estafette.ci.manifest.v1.EstafetteSemverVersion.prototype.setMajor = function(value) {
  jspb.Message.setProto3IntField(this, 1, value);
};


/**
 * optional int64 minor = 2;
 * @return {number}
 */
proto.estafette.ci.manifest.v1.EstafetteSemverVersion.prototype.getMinor = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/** @param {number} value */
proto.estafette.ci.manifest.v1.EstafetteSemverVersion.prototype.setMinor = function(value) {
  jspb.Message.setProto3IntField(this, 2, value);
};


/**
 * optional string patch = 3;
 * @return {string}
 */
proto.estafette.ci.manifest.v1.EstafetteSemverVersion.prototype.getPatch = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/** @param {string} value */
proto.estafette.ci.manifest.v1.EstafetteSemverVersion.prototype.setPatch = function(value) {
  jspb.Message.setProto3StringField(this, 3, value);
};


/**
 * optional string label_template = 4;
 * @return {string}
 */
proto.estafette.ci.manifest.v1.EstafetteSemverVersion.prototype.getLabelTemplate = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 4, ""));
};


/** @param {string} value */
proto.estafette.ci.manifest.v1.EstafetteSemverVersion.prototype.setLabelTemplate = function(value) {
  jspb.Message.setProto3StringField(this, 4, value);
};


/**
 * optional StringOrStringArray release_branch = 5;
 * @return {?proto.estafette.ci.manifest.v1.StringOrStringArray}
 */
proto.estafette.ci.manifest.v1.EstafetteSemverVersion.prototype.getReleaseBranch = function() {
  return /** @type{?proto.estafette.ci.manifest.v1.StringOrStringArray} */ (
    jspb.Message.getWrapperField(this, proto.estafette.ci.manifest.v1.StringOrStringArray, 5));
};


/** @param {?proto.estafette.ci.manifest.v1.StringOrStringArray|undefined} value */
proto.estafette.ci.manifest.v1.EstafetteSemverVersion.prototype.setReleaseBranch = function(value) {
  jspb.Message.setWrapperField(this, 5, value);
};


proto.estafette.ci.manifest.v1.EstafetteSemverVersion.prototype.clearReleaseBranch = function() {
  this.setReleaseBranch(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.estafette.ci.manifest.v1.EstafetteSemverVersion.prototype.hasReleaseBranch = function() {
  return jspb.Message.getField(this, 5) != null;
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.estafette.ci.manifest.v1.EstafetteVersion = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.estafette.ci.manifest.v1.EstafetteVersion, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.estafette.ci.manifest.v1.EstafetteVersion.displayName = 'proto.estafette.ci.manifest.v1.EstafetteVersion';
}


if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.estafette.ci.manifest.v1.EstafetteVersion.prototype.toObject = function(opt_includeInstance) {
  return proto.estafette.ci.manifest.v1.EstafetteVersion.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.estafette.ci.manifest.v1.EstafetteVersion} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.estafette.ci.manifest.v1.EstafetteVersion.toObject = function(includeInstance, msg) {
  var f, obj = {
    semver: (f = msg.getSemver()) && proto.estafette.ci.manifest.v1.EstafetteSemverVersion.toObject(includeInstance, f),
    custom: (f = msg.getCustom()) && proto.estafette.ci.manifest.v1.EstafetteCustomVersion.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.estafette.ci.manifest.v1.EstafetteVersion}
 */
proto.estafette.ci.manifest.v1.EstafetteVersion.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.estafette.ci.manifest.v1.EstafetteVersion;
  return proto.estafette.ci.manifest.v1.EstafetteVersion.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.estafette.ci.manifest.v1.EstafetteVersion} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.estafette.ci.manifest.v1.EstafetteVersion}
 */
proto.estafette.ci.manifest.v1.EstafetteVersion.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.estafette.ci.manifest.v1.EstafetteSemverVersion;
      reader.readMessage(value,proto.estafette.ci.manifest.v1.EstafetteSemverVersion.deserializeBinaryFromReader);
      msg.setSemver(value);
      break;
    case 2:
      var value = new proto.estafette.ci.manifest.v1.EstafetteCustomVersion;
      reader.readMessage(value,proto.estafette.ci.manifest.v1.EstafetteCustomVersion.deserializeBinaryFromReader);
      msg.setCustom(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.estafette.ci.manifest.v1.EstafetteVersion.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.estafette.ci.manifest.v1.EstafetteVersion.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.estafette.ci.manifest.v1.EstafetteVersion} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.estafette.ci.manifest.v1.EstafetteVersion.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getSemver();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      proto.estafette.ci.manifest.v1.EstafetteSemverVersion.serializeBinaryToWriter
    );
  }
  f = message.getCustom();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      proto.estafette.ci.manifest.v1.EstafetteCustomVersion.serializeBinaryToWriter
    );
  }
};


/**
 * optional EstafetteSemverVersion semver = 1;
 * @return {?proto.estafette.ci.manifest.v1.EstafetteSemverVersion}
 */
proto.estafette.ci.manifest.v1.EstafetteVersion.prototype.getSemver = function() {
  return /** @type{?proto.estafette.ci.manifest.v1.EstafetteSemverVersion} */ (
    jspb.Message.getWrapperField(this, proto.estafette.ci.manifest.v1.EstafetteSemverVersion, 1));
};


/** @param {?proto.estafette.ci.manifest.v1.EstafetteSemverVersion|undefined} value */
proto.estafette.ci.manifest.v1.EstafetteVersion.prototype.setSemver = function(value) {
  jspb.Message.setWrapperField(this, 1, value);
};


proto.estafette.ci.manifest.v1.EstafetteVersion.prototype.clearSemver = function() {
  this.setSemver(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.estafette.ci.manifest.v1.EstafetteVersion.prototype.hasSemver = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional EstafetteCustomVersion custom = 2;
 * @return {?proto.estafette.ci.manifest.v1.EstafetteCustomVersion}
 */
proto.estafette.ci.manifest.v1.EstafetteVersion.prototype.getCustom = function() {
  return /** @type{?proto.estafette.ci.manifest.v1.EstafetteCustomVersion} */ (
    jspb.Message.getWrapperField(this, proto.estafette.ci.manifest.v1.EstafetteCustomVersion, 2));
};


/** @param {?proto.estafette.ci.manifest.v1.EstafetteCustomVersion|undefined} value */
proto.estafette.ci.manifest.v1.EstafetteVersion.prototype.setCustom = function(value) {
  jspb.Message.setWrapperField(this, 2, value);
};


proto.estafette.ci.manifest.v1.EstafetteVersion.prototype.clearCustom = function() {
  this.setCustom(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.estafette.ci.manifest.v1.EstafetteVersion.prototype.hasCustom = function() {
  return jspb.Message.getField(this, 2) != null;
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.estafette.ci.manifest.v1.EstafetteManifest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.estafette.ci.manifest.v1.EstafetteManifest.repeatedFields_, null);
};
goog.inherits(proto.estafette.ci.manifest.v1.EstafetteManifest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.estafette.ci.manifest.v1.EstafetteManifest.displayName = 'proto.estafette.ci.manifest.v1.EstafetteManifest';
}
/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.estafette.ci.manifest.v1.EstafetteManifest.repeatedFields_ = [5,6,7];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.estafette.ci.manifest.v1.EstafetteManifest.prototype.toObject = function(opt_includeInstance) {
  return proto.estafette.ci.manifest.v1.EstafetteManifest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.estafette.ci.manifest.v1.EstafetteManifest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.estafette.ci.manifest.v1.EstafetteManifest.toObject = function(includeInstance, msg) {
  var f, obj = {
    builder: (f = msg.getBuilder()) && proto.estafette.ci.manifest.v1.EstafetteBuilder.toObject(includeInstance, f),
    labelsMap: (f = msg.getLabelsMap()) ? f.toObject(includeInstance, undefined) : [],
    version: (f = msg.getVersion()) && proto.estafette.ci.manifest.v1.EstafetteVersion.toObject(includeInstance, f),
    globalEnvVarsMap: (f = msg.getGlobalEnvVarsMap()) ? f.toObject(includeInstance, undefined) : [],
    triggersList: jspb.Message.toObjectList(msg.getTriggersList(),
    proto.estafette.ci.manifest.v1.EstafetteTrigger.toObject, includeInstance),
    stagesList: jspb.Message.toObjectList(msg.getStagesList(),
    proto.estafette.ci.manifest.v1.EstafetteStage.toObject, includeInstance),
    releasesList: jspb.Message.toObjectList(msg.getReleasesList(),
    proto.estafette.ci.manifest.v1.EstafetteRelease.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.estafette.ci.manifest.v1.EstafetteManifest}
 */
proto.estafette.ci.manifest.v1.EstafetteManifest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.estafette.ci.manifest.v1.EstafetteManifest;
  return proto.estafette.ci.manifest.v1.EstafetteManifest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.estafette.ci.manifest.v1.EstafetteManifest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.estafette.ci.manifest.v1.EstafetteManifest}
 */
proto.estafette.ci.manifest.v1.EstafetteManifest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.estafette.ci.manifest.v1.EstafetteBuilder;
      reader.readMessage(value,proto.estafette.ci.manifest.v1.EstafetteBuilder.deserializeBinaryFromReader);
      msg.setBuilder(value);
      break;
    case 2:
      var value = msg.getLabelsMap();
      reader.readMessage(value, function(message, reader) {
        jspb.Map.deserializeBinary(message, reader, jspb.BinaryReader.prototype.readString, jspb.BinaryReader.prototype.readString, null, "");
         });
      break;
    case 3:
      var value = new proto.estafette.ci.manifest.v1.EstafetteVersion;
      reader.readMessage(value,proto.estafette.ci.manifest.v1.EstafetteVersion.deserializeBinaryFromReader);
      msg.setVersion(value);
      break;
    case 4:
      var value = msg.getGlobalEnvVarsMap();
      reader.readMessage(value, function(message, reader) {
        jspb.Map.deserializeBinary(message, reader, jspb.BinaryReader.prototype.readString, jspb.BinaryReader.prototype.readString, null, "");
         });
      break;
    case 5:
      var value = new proto.estafette.ci.manifest.v1.EstafetteTrigger;
      reader.readMessage(value,proto.estafette.ci.manifest.v1.EstafetteTrigger.deserializeBinaryFromReader);
      msg.addTriggers(value);
      break;
    case 6:
      var value = new proto.estafette.ci.manifest.v1.EstafetteStage;
      reader.readMessage(value,proto.estafette.ci.manifest.v1.EstafetteStage.deserializeBinaryFromReader);
      msg.addStages(value);
      break;
    case 7:
      var value = new proto.estafette.ci.manifest.v1.EstafetteRelease;
      reader.readMessage(value,proto.estafette.ci.manifest.v1.EstafetteRelease.deserializeBinaryFromReader);
      msg.addReleases(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.estafette.ci.manifest.v1.EstafetteManifest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.estafette.ci.manifest.v1.EstafetteManifest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.estafette.ci.manifest.v1.EstafetteManifest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.estafette.ci.manifest.v1.EstafetteManifest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getBuilder();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      proto.estafette.ci.manifest.v1.EstafetteBuilder.serializeBinaryToWriter
    );
  }
  f = message.getLabelsMap(true);
  if (f && f.getLength() > 0) {
    f.serializeBinary(2, writer, jspb.BinaryWriter.prototype.writeString, jspb.BinaryWriter.prototype.writeString);
  }
  f = message.getVersion();
  if (f != null) {
    writer.writeMessage(
      3,
      f,
      proto.estafette.ci.manifest.v1.EstafetteVersion.serializeBinaryToWriter
    );
  }
  f = message.getGlobalEnvVarsMap(true);
  if (f && f.getLength() > 0) {
    f.serializeBinary(4, writer, jspb.BinaryWriter.prototype.writeString, jspb.BinaryWriter.prototype.writeString);
  }
  f = message.getTriggersList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      5,
      f,
      proto.estafette.ci.manifest.v1.EstafetteTrigger.serializeBinaryToWriter
    );
  }
  f = message.getStagesList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      6,
      f,
      proto.estafette.ci.manifest.v1.EstafetteStage.serializeBinaryToWriter
    );
  }
  f = message.getReleasesList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      7,
      f,
      proto.estafette.ci.manifest.v1.EstafetteRelease.serializeBinaryToWriter
    );
  }
};


/**
 * optional EstafetteBuilder builder = 1;
 * @return {?proto.estafette.ci.manifest.v1.EstafetteBuilder}
 */
proto.estafette.ci.manifest.v1.EstafetteManifest.prototype.getBuilder = function() {
  return /** @type{?proto.estafette.ci.manifest.v1.EstafetteBuilder} */ (
    jspb.Message.getWrapperField(this, proto.estafette.ci.manifest.v1.EstafetteBuilder, 1));
};


/** @param {?proto.estafette.ci.manifest.v1.EstafetteBuilder|undefined} value */
proto.estafette.ci.manifest.v1.EstafetteManifest.prototype.setBuilder = function(value) {
  jspb.Message.setWrapperField(this, 1, value);
};


proto.estafette.ci.manifest.v1.EstafetteManifest.prototype.clearBuilder = function() {
  this.setBuilder(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.estafette.ci.manifest.v1.EstafetteManifest.prototype.hasBuilder = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * map<string, string> labels = 2;
 * @param {boolean=} opt_noLazyCreate Do not create the map if
 * empty, instead returning `undefined`
 * @return {!jspb.Map<string,string>}
 */
proto.estafette.ci.manifest.v1.EstafetteManifest.prototype.getLabelsMap = function(opt_noLazyCreate) {
  return /** @type {!jspb.Map<string,string>} */ (
      jspb.Message.getMapField(this, 2, opt_noLazyCreate,
      null));
};


proto.estafette.ci.manifest.v1.EstafetteManifest.prototype.clearLabelsMap = function() {
  this.getLabelsMap().clear();
};


/**
 * optional EstafetteVersion version = 3;
 * @return {?proto.estafette.ci.manifest.v1.EstafetteVersion}
 */
proto.estafette.ci.manifest.v1.EstafetteManifest.prototype.getVersion = function() {
  return /** @type{?proto.estafette.ci.manifest.v1.EstafetteVersion} */ (
    jspb.Message.getWrapperField(this, proto.estafette.ci.manifest.v1.EstafetteVersion, 3));
};


/** @param {?proto.estafette.ci.manifest.v1.EstafetteVersion|undefined} value */
proto.estafette.ci.manifest.v1.EstafetteManifest.prototype.setVersion = function(value) {
  jspb.Message.setWrapperField(this, 3, value);
};


proto.estafette.ci.manifest.v1.EstafetteManifest.prototype.clearVersion = function() {
  this.setVersion(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.estafette.ci.manifest.v1.EstafetteManifest.prototype.hasVersion = function() {
  return jspb.Message.getField(this, 3) != null;
};


/**
 * map<string, string> global_env_vars = 4;
 * @param {boolean=} opt_noLazyCreate Do not create the map if
 * empty, instead returning `undefined`
 * @return {!jspb.Map<string,string>}
 */
proto.estafette.ci.manifest.v1.EstafetteManifest.prototype.getGlobalEnvVarsMap = function(opt_noLazyCreate) {
  return /** @type {!jspb.Map<string,string>} */ (
      jspb.Message.getMapField(this, 4, opt_noLazyCreate,
      null));
};


proto.estafette.ci.manifest.v1.EstafetteManifest.prototype.clearGlobalEnvVarsMap = function() {
  this.getGlobalEnvVarsMap().clear();
};


/**
 * repeated EstafetteTrigger triggers = 5;
 * @return {!Array<!proto.estafette.ci.manifest.v1.EstafetteTrigger>}
 */
proto.estafette.ci.manifest.v1.EstafetteManifest.prototype.getTriggersList = function() {
  return /** @type{!Array<!proto.estafette.ci.manifest.v1.EstafetteTrigger>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.estafette.ci.manifest.v1.EstafetteTrigger, 5));
};


/** @param {!Array<!proto.estafette.ci.manifest.v1.EstafetteTrigger>} value */
proto.estafette.ci.manifest.v1.EstafetteManifest.prototype.setTriggersList = function(value) {
  jspb.Message.setRepeatedWrapperField(this, 5, value);
};


/**
 * @param {!proto.estafette.ci.manifest.v1.EstafetteTrigger=} opt_value
 * @param {number=} opt_index
 * @return {!proto.estafette.ci.manifest.v1.EstafetteTrigger}
 */
proto.estafette.ci.manifest.v1.EstafetteManifest.prototype.addTriggers = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 5, opt_value, proto.estafette.ci.manifest.v1.EstafetteTrigger, opt_index);
};


proto.estafette.ci.manifest.v1.EstafetteManifest.prototype.clearTriggersList = function() {
  this.setTriggersList([]);
};


/**
 * repeated EstafetteStage stages = 6;
 * @return {!Array<!proto.estafette.ci.manifest.v1.EstafetteStage>}
 */
proto.estafette.ci.manifest.v1.EstafetteManifest.prototype.getStagesList = function() {
  return /** @type{!Array<!proto.estafette.ci.manifest.v1.EstafetteStage>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.estafette.ci.manifest.v1.EstafetteStage, 6));
};


/** @param {!Array<!proto.estafette.ci.manifest.v1.EstafetteStage>} value */
proto.estafette.ci.manifest.v1.EstafetteManifest.prototype.setStagesList = function(value) {
  jspb.Message.setRepeatedWrapperField(this, 6, value);
};


/**
 * @param {!proto.estafette.ci.manifest.v1.EstafetteStage=} opt_value
 * @param {number=} opt_index
 * @return {!proto.estafette.ci.manifest.v1.EstafetteStage}
 */
proto.estafette.ci.manifest.v1.EstafetteManifest.prototype.addStages = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 6, opt_value, proto.estafette.ci.manifest.v1.EstafetteStage, opt_index);
};


proto.estafette.ci.manifest.v1.EstafetteManifest.prototype.clearStagesList = function() {
  this.setStagesList([]);
};


/**
 * repeated EstafetteRelease releases = 7;
 * @return {!Array<!proto.estafette.ci.manifest.v1.EstafetteRelease>}
 */
proto.estafette.ci.manifest.v1.EstafetteManifest.prototype.getReleasesList = function() {
  return /** @type{!Array<!proto.estafette.ci.manifest.v1.EstafetteRelease>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.estafette.ci.manifest.v1.EstafetteRelease, 7));
};


/** @param {!Array<!proto.estafette.ci.manifest.v1.EstafetteRelease>} value */
proto.estafette.ci.manifest.v1.EstafetteManifest.prototype.setReleasesList = function(value) {
  jspb.Message.setRepeatedWrapperField(this, 7, value);
};


/**
 * @param {!proto.estafette.ci.manifest.v1.EstafetteRelease=} opt_value
 * @param {number=} opt_index
 * @return {!proto.estafette.ci.manifest.v1.EstafetteRelease}
 */
proto.estafette.ci.manifest.v1.EstafetteManifest.prototype.addReleases = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 7, opt_value, proto.estafette.ci.manifest.v1.EstafetteRelease, opt_index);
};


proto.estafette.ci.manifest.v1.EstafetteManifest.prototype.clearReleasesList = function() {
  this.setReleasesList([]);
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.estafette.ci.manifest.v1.EstafetteVersionParams = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.estafette.ci.manifest.v1.EstafetteVersionParams, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.estafette.ci.manifest.v1.EstafetteVersionParams.displayName = 'proto.estafette.ci.manifest.v1.EstafetteVersionParams';
}


if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.estafette.ci.manifest.v1.EstafetteVersionParams.prototype.toObject = function(opt_includeInstance) {
  return proto.estafette.ci.manifest.v1.EstafetteVersionParams.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.estafette.ci.manifest.v1.EstafetteVersionParams} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.estafette.ci.manifest.v1.EstafetteVersionParams.toObject = function(includeInstance, msg) {
  var f, obj = {
    autoIncrement: jspb.Message.getFieldWithDefault(msg, 1, 0),
    branch: jspb.Message.getFieldWithDefault(msg, 2, ""),
    revision: jspb.Message.getFieldWithDefault(msg, 3, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.estafette.ci.manifest.v1.EstafetteVersionParams}
 */
proto.estafette.ci.manifest.v1.EstafetteVersionParams.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.estafette.ci.manifest.v1.EstafetteVersionParams;
  return proto.estafette.ci.manifest.v1.EstafetteVersionParams.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.estafette.ci.manifest.v1.EstafetteVersionParams} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.estafette.ci.manifest.v1.EstafetteVersionParams}
 */
proto.estafette.ci.manifest.v1.EstafetteVersionParams.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setAutoIncrement(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setBranch(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setRevision(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.estafette.ci.manifest.v1.EstafetteVersionParams.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.estafette.ci.manifest.v1.EstafetteVersionParams.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.estafette.ci.manifest.v1.EstafetteVersionParams} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.estafette.ci.manifest.v1.EstafetteVersionParams.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getAutoIncrement();
  if (f !== 0) {
    writer.writeInt64(
      1,
      f
    );
  }
  f = message.getBranch();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getRevision();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
};


/**
 * optional int64 auto_increment = 1;
 * @return {number}
 */
proto.estafette.ci.manifest.v1.EstafetteVersionParams.prototype.getAutoIncrement = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/** @param {number} value */
proto.estafette.ci.manifest.v1.EstafetteVersionParams.prototype.setAutoIncrement = function(value) {
  jspb.Message.setProto3IntField(this, 1, value);
};


/**
 * optional string branch = 2;
 * @return {string}
 */
proto.estafette.ci.manifest.v1.EstafetteVersionParams.prototype.getBranch = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/** @param {string} value */
proto.estafette.ci.manifest.v1.EstafetteVersionParams.prototype.setBranch = function(value) {
  jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional string revision = 3;
 * @return {string}
 */
proto.estafette.ci.manifest.v1.EstafetteVersionParams.prototype.getRevision = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/** @param {string} value */
proto.estafette.ci.manifest.v1.EstafetteVersionParams.prototype.setRevision = function(value) {
  jspb.Message.setProto3StringField(this, 3, value);
};


